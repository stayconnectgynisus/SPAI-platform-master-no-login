{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hammad\\\\FrontEnd\\\\ClientApp\\\\src\\\\components\\\\DataWareHouse\\\\DataWareHouse.js\";\nimport React from \"react\";\nimport \"../GynTable/gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Column } from \"primereact/column\";\nimport env from \"../../evn\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Button } from \"primereact/button\";\nimport MButton from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as moment from \"moment\";\nimport Moment from \"react-moment\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport MultiCascader from \"rsuite/lib/MultiCascader\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { object } from \"prop-types\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport APIHelper from \"../../utils/apiHelper\";\nimport sample from \"../ConditionPredictionTable/sample.json\";\nimport { InputText } from 'primereact/inputtext';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { Accordion, AccordionTab } from 'primereact/accordion'; // var MultiCascader = require('rsuite/lib/MultiCascader');\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nconst baseColStyle = {\n  textAlign: \"center\",\n  padding: \"1% !important\",\n  fontSize: \"13px !important\",\n  color: \"#333\",\n  position: \"relative\"\n};\nconst BASE_URL = env.baseUrl;\nconst isProd = env.isProd; // CHART OPTIONS\n\nconst columns = [{\n  label: \"Patient's MRN\",\n  key: \"PatientMRN\",\n  isSelected: true\n}, {\n  label: \"Patient First Name\",\n  key: \"PatientFirstName\",\n  isSelected: true\n}, {\n  label: \"Patient Last Name\",\n  key: \"PatientLastNAme\",\n  isSelected: true\n}, {\n  key: \"DiagnosisDate\",\n  label: \"Diagnosis Date\",\n  isSelected: true\n}, {\n  key: \"ICD10Code\",\n  label: \"ICD 10 Code\",\n  isSelected: true\n}, {\n  key: \"ConditionDescription\",\n  label: \"Condition Description\",\n  isSelected: true\n}, {\n  key: \"DiagnosisType\",\n  label: \"Diagnosis Type\",\n  isSelected: true\n} // { key: \"ConditionValue\", label: \"Condition Value\", isSelected: true },\n// { key: \"Location\", label: \"Location\", isSelected: true },\n// { key: \"LabTestDescription\", label: \"Lab Test Description\", isSelected: true },\n// { key: \"LabTestValue\", label: \"Lab Test Value\", isSelected: false },\n// { key: \"Labtest_Insert_timestamp\", label: \"Lab Test Date\", isSelected: false },\n// { key: \"VitalsDescription\", label: \"Vitals Description\", isSelected: false },\n// { key: \"VitalsValue\", label: \"Vitals Value\", isSelected: false }, \n// { key: \"Vitals_Insert_timestamp\", label: \"Vitals Date\", isSelected: false },\n// { label: \"Gender\", key: \"Gender\", isSelected: false },\n// { label: \"Race\", key: \"Race\", isSelected: false },\n// { label: \"Language\", key: \"LANGUAGE\", isSelected: false },\n// { label: \"Religion\", key: \"Religion\", isSelected: false },\n// { label: \"MaritalStatus\", key: \"MaritalStatus\", isSelected: false },\n// { label: \"Education\", key: \"Education\", isSelected: false },\n// { label: \"Demographics Date\", key: \"Demographic_Insert_timestamp\", isSelected: false },\n// { label: \"Provider MRN\", key: \"ProviderMRN\", isSelected: true },\n// { label: \"Provider First Name\", key: \"ProviderFirstName\", isSelected: false },\n// { label: \"Provider Last Name\", key: \"ProviderLastName\", isSelected: false },\n];\nconst defaultFilter = localStorage.getItem(\"conditions\");\n\nclass DataWareHouse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.MAX_SELECTED = 10;\n    this.pageIndex = 0;\n    this.state = {\n      openModel: false,\n      data: [],\n      // TODO : REMOVE IT\n      labTestData: [],\n      vitalSIgnsData: [],\n      notesSummary: [],\n      datesData: [],\n      isAPICallRunning: false,\n      isExpanded: false,\n      currSelected: null,\n      checkedItems: new Map(),\n      checkedColumns: {},\n      providerMRN: '',\n      patientMRN: '',\n      patientInfo: {}\n    };\n  }\n\n  componentDidMount() {\n    this.prepareColumns();\n    if (this.inputEl) setTimeout(() => {\n      this.inputEl.element.focus();\n    }, 1000);\n  }\n\n  renderDateFilter(key) {\n    const onChange = event => {\n      this.dt.filter(event.value, key, \"equals\");\n      this.setState({\n        [key]: event.value\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, key, \"equals\");\n      this.setState({\n        [key]: null\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      value: this.state[key],\n      onChange: onChange,\n      selectionMode: \"single\",\n      hideOnDateTimeSelect: true,\n      readOnlyInput: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), this.state[key] && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }));\n  }\n\n  datesBodyTemplate(rowData, key) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData[key] && /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY/MM/DD HH:MM:SS\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, rowData[key]));\n  }\n\n  datesBodyTemplateFroFirstPredection(rowData, key) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData[key] && this.renderFirstPredection(rowData, key));\n  }\n\n  renderFirstPredection(rowData, key) {\n    return moment(rowData[key]).format(\"YYYY/MM/DD HH:MM:SS\").toString() + (rowData[\"FirstSeverity\"] ? \" (\" + rowData[\"FirstSeverity\"].toString() + \")\" : \"\");\n  }\n\n  onFilterChange(e, filter) {\n    this.setState({\n      [filter]: e.target.value\n    });\n  }\n\n  onSearch() {\n    // BUILD URL\n    let url = `/connectivitycreation?`;\n\n    if (!this.state.patientMRN && !this.state.providerMRN) {\n      alert('Please enter patient MRN or provider MRN.');\n      return;\n    }\n\n    if (this.state.patientMRN) {\n      url += 'patientMRN=' + this.state.patientMRN;\n    }\n\n    if (this.state.providerMRN) {\n      url += 'providerMRN=' + this.state.providerMRN;\n    }\n\n    this.lastSearchUrl = url;\n    this.pageIndex = 0;\n    url += `&page=${this.pageIndex}`;\n    this.setState({\n      isAPICallRunning: true\n    }); // send request to the server\n\n    APIHelper(url).then(data => {\n      let finalDatesData = this.prepateDatesData(data);\n      this.setState({\n        isAPICallRunning: false\n      });\n      this.setState({\n        data: data.Table,\n        isExpanded: true,\n        patientInfo: data.Table3 && data.Table3.length > 0 ? data.Table3[0] : {},\n        labTestData: data.Table1 || [],\n        vitalSIgnsData: data.Table2 || [],\n        notesSummary: data.Table4 || [],\n        datesData: finalDatesData\n      });\n    }).catch(err => {\n      this.setState({\n        isAPICallRunning: false\n      });\n      console.log(\" err :\", err);\n    });\n  }\n\n  prepateDatesData(data) {\n    let datesData = data.Table5 || [];\n    let finalDatesData = [];\n\n    if (datesData && datesData.length > 0) {\n      datesData.map(d => {\n        d.date = moment(d.insert_timestamp).format(\"YYYY-MM-DD\");\n      });\n      var dates = [...new Set(datesData.map(item => item.date))];\n      dates.map(d => {\n        let noteTypes = this.prepareNoteTypes(datesData, d);\n        finalDatesData.push({\n          date: d,\n          notetypes: noteTypes\n        });\n      });\n      console.log(finalDatesData);\n    }\n\n    return finalDatesData;\n  }\n\n  prepareNoteTypes(datesData, date) {\n    return [...new Set(datesData.filter(d => d.date === date).map(item => item.NoteType))].map(n => {\n      let conditionDescription = [...new Set(datesData.filter(d => d.date === date && d.NoteType == n).map(item => item.ConditionDescription))].map(c => {\n        let plansText = [...new Set(datesData.filter(d => d.date === date && d.NoteType == n && d.ConditionDescription == c).map(item => item.Assessment_plan))];\n        return {\n          problemTitle: c,\n          assessment_plans: plansText\n        };\n      });\n      return {\n        noteType: n,\n        problemTitles: conditionDescription\n      };\n    });\n  }\n\n  initNextPageData() {\n    this.pageIndex++;\n    let url = `${this.lastSearchUrl}&page=${this.pageIndex}`;\n    console.log(\"url :\", url);\n\n    if (isProd) {\n      APIHelper(url).then(data => {\n        this.setState({\n          data: this.state.data.concat(data)\n        });\n      });\n    }\n  }\n\n  setConditionFilter(c) {}\n\n  handleClickOpen() {\n    this.setState({\n      openModel: true\n    });\n    this.prepareColumns();\n  }\n\n  handleClose(isSave) {\n    this.setState({\n      openModel: false\n    });\n\n    if (isSave) {\n      this.saveColumns();\n    }\n  }\n\n  handleColumnChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    this.setState(prevState => ({\n      checkedItems: prevState.checkedItems.set(item, isChecked)\n    }));\n  }\n\n  prepareColumns() {\n    var selectedColumns = localStorage.getItem(\"selected_columns_data_warehouse_v3\");\n    if (selectedColumns) selectedColumns = JSON.parse(selectedColumns);else selectedColumns = this.defaultColumns();\n    var checkMap = new Map();\n\n    for (const key in selectedColumns) {\n      checkMap.set(key, selectedColumns[key]);\n    }\n\n    this.setState({\n      checkedColumns: selectedColumns,\n      checkedItems: checkMap\n    });\n  }\n\n  saveColumns() {\n    var selectedColumns = this.defaultColumns();\n    this.state.checkedItems.forEach((value, key) => {\n      selectedColumns[key] = value;\n    });\n    this.setState({\n      checkedColumns: selectedColumns\n    });\n    localStorage.setItem(\"selected_columns_data_warehouse_v3\", JSON.stringify(selectedColumns));\n  }\n\n  defaultColumns() {\n    var selectedColumns = {};\n    columns.map(c => {\n      selectedColumns[c.key] = c.isSelected;\n    });\n    return selectedColumns;\n  }\n\n  onExpand() {\n    this.setState({\n      isExpanded: !this.state.isExpanded\n    });\n  }\n\n  onCurrSelectedChanged(item) {}\n\n  formatPrediction(value) {\n    if (!value || typeof value != \"number\") return value;\n    return value.toFixed('1');\n  }\n\n  onPage(e) {\n    // {first: 55, rows: 5, page: 11, pageCount: 12}\n    // let isLastPage = e.page === e.pageCount - 1;\n    // if (isLastPage) {\n    //   //    need to load more data here;\n    //   this.initNextPageData();\n    // }\n    console.log(\"e :\", e);\n    this.setState({\n      first: e.first\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gyn-table-container main-container warehouse\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 25\n      }\n    }, \"SPAI Data Warehouse\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.patientMRN,\n      ref: el => this.inputEl = el,\n      style: {\n        marginRight: \"15px\",\n        backgroundColor: '#f5fdff'\n      },\n      onChange: e => this.onFilterChange(e, \"patientMRN\"),\n      placeholder: \"Patient MRN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.providerMRN,\n      style: {\n        marginRight: \"15px\"\n      },\n      onChange: e => this.onFilterChange(e, \"providerMRN\"),\n      placeholder: \"Provider MRN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      label: \"Search\",\n      style: {\n        display: this.state.isAPICallRunning ? \"none\" : \"inline-flex\"\n      },\n      onClick: () => {\n        this.onSearch();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MButton, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"btnProgress\",\n      style: {\n        borderRadius: 3,\n        textTransform: \"none\",\n        marginLeft: \"5px\",\n        opacity: \"0.7\",\n        width: \"230px\",\n        display: !this.state.isAPICallRunning ? \"none\" : \"inline-flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: \"1.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 33\n      }\n    }), \"\\xA0\\xA0Processing..\"), /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"expand\",\n      onClick: () => {\n        this.onExpand();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 29\n      }\n    }, !this.state.isExpanded ? /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(ExpandLessIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content widget-drawer \" + (this.state.isExpanded ? 'visible' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }, this.state.patientInfo && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        display: \"inline-flex\",\n        float: \"left\",\n        margin: \"0px\",\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 37\n      }\n    }, \"Patient information\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 37\n      }\n    }, this.state.patientInfo && this.state.patientInfo.PatientMRN && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 53\n      }\n    }, \"Patient MRN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.PatientMRN)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 53\n      }\n    }, \"Patient First Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.PatientFirstName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 53\n      }\n    }, \"Patient Last Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.PatientLastName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 53\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.Gender)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 53\n      }\n    }, \"Race\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.Race)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 53\n      }\n    }, \"Language\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.Language)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 53\n      }\n    }, \"Religion\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"width-50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 53\n      }\n    }, this.state.patientInfo.Religion))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        display: \"inline-flex\",\n        float: \"left\",\n        margin: \"0px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 41\n      }\n    }, \"Medical Conditions (Diagnosis, Medical Hx, Historical Dx, Procedures)\"), /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.data,\n      sortMode: \"multiple\",\n      selectionMode: \"single\" // multiSortMeta={[\n      //     {\n      //         field: \"PredictionDate\",\n      //         order: -1,\n      //     },\n      //     {\n      //         field: \"EstRiskScaleSTInNum\",\n      //         order: -1,\n      //     },\n      // ]}\n      ,\n      paginator: true,\n      rows: 5,\n      first: this.state.first,\n      sortX: true,\n      selection: this.state.currSelected,\n      onSelectionChange: e => this.onCurrSelectedChanged(e.value),\n      onPage: e => this.onPage(e),\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 41\n      }\n    }, this.state.checkedColumns && this.state.checkedColumns.PatientMRN === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      sortField: \"PatientMRN\",\n      header: \"Patient's MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 53\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.PatientFirstName === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientFirstName\",\n      header: \"Patient First Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 53\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.PatientLastNAme === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientLastName\",\n      header: \"Patient Last Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 53\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.DiagnosisDate === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"DiagnosisDate\",\n      header: \"Diagnosis Date\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 53\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.ICD10Code === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"ICD10Code\",\n      header: \"ICD 10 Code\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 49\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.ConditionDescription === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"ConditionDescription\",\n      header: \"Condition Description\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 49\n      }\n    }), this.state.checkedColumns && this.state.checkedColumns.DiagnosisType === true && /*#__PURE__*/React.createElement(Column, {\n      field: \"DiagnosisType\",\n      header: \"Diagnosis Type\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 49\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        display: \"inline-flex\",\n        float: \"left\",\n        margin: \"0px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 41\n      }\n    }, \"Notes Summary\"), /*#__PURE__*/React.createElement(DataTable // ref={(el) => (this.dt = el)}\n    , {\n      value: this.state.notesSummary,\n      sortMode: \"multiple\",\n      selectionMode: \"single\",\n      paginator: true,\n      rows: 5 // first={this.state.first}\n      ,\n      sortX: true // selection={this.state.currSelected}\n      // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n      // onPage={(e) => this.onPage(e)}\n      ,\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      sortField: \"PatientMRN\",\n      header: \"Patient MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientFirstName\",\n      header: \"Patient First Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientLastName\",\n      header: \"Patient Last Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"DiagnosisDate\",\n      header: \"Diagnosis Date\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ConditionDescription\",\n      header: \"Condition Description\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ICD10Code\",\n      header: \"ICD10 Code\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"BillingCode\",\n      header: \"DRG\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"DiagnosisType\",\n      header: \"Diagnosis Type\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Source\",\n      header: \"Source\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"text-align-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: \"0px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 41\n      }\n    }, \"Notes - Assessment and Plan\"), /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 41\n      }\n    }, this.state.datesData.map(d => /*#__PURE__*/React.createElement(AccordionTab, {\n      header: d.date,\n      key: d.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 53\n      }\n    }, d.notetypes.map(n => /*#__PURE__*/React.createElement(AccordionTab, {\n      header: n.noteType,\n      key: n.noteType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 65\n      }\n    }, n.problemTitles.map(p => /*#__PURE__*/React.createElement(AccordionTab, {\n      header: p.problemTitle,\n      key: p.problemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 77\n      }\n    }, p.assessment_plans.map(text => /*#__PURE__*/React.createElement(\"li\", {\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 85\n      }\n    }, text)))))))))))), (!this.state.datesData || this.state.datesData.length == 0) && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 45\n      }\n    }, \"No results found.\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        display: \"inline-flex\",\n        float: \"left\",\n        margin: \"0px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 41\n      }\n    }, \"Lab Tests\"), /*#__PURE__*/React.createElement(DataTable // ref={(el) => (this.dt = el)}\n    , {\n      value: this.state.labTestData,\n      sortMode: \"multiple\",\n      selectionMode: \"single\",\n      paginator: true,\n      rows: 5 // first={this.state.first}\n      ,\n      sortX: true // selection={this.state.currSelected}\n      // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n      // onPage={(e) => this.onPage(e)}\n      ,\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      sortField: \"PatientMRN\",\n      header: \"Patient MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientFirstName\",\n      header: \"Patient First Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientLastName\",\n      header: \"Patient Last Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"LabTest_timestamp\",\n      header: \"Lab Test timestamp\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"LabTestDescription\",\n      header: \"Lab Test Description\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"LabTestValue\",\n      header: \"LabTest Value\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"LabTest_ValueRange\",\n      header: \"Lab Test Value Range\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        display: \"inline-flex\",\n        float: \"left\",\n        margin: \"0px\",\n        marginBottom: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 41\n      }\n    }, \"Vital Signs\"), /*#__PURE__*/React.createElement(DataTable // ref={(el) => (this.dt = el)}\n    , {\n      value: this.state.vitalSIgnsData,\n      sortMode: \"multiple\",\n      selectionMode: \"single\",\n      paginator: true,\n      rows: 5 // first={this.state.first}\n      ,\n      sortX: true // selection={this.state.currSelected}\n      // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n      // onPage={(e) => this.onPage(e)}\n      ,\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      sortField: \"PatientMRN\",\n      header: \"Patient MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientFirstName\",\n      header: \"Patient First Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientLastName\",\n      header: \"Patient Last Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"LabTest_timestamp\",\n      header: \"Vitals timestamp\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"VitalsDescription\",\n      header: \"Vitals Description\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"VitalsValue\",\n      header: \"Vitals Value\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Vitals_ValueRange\",\n      header: \"Vitals Value Range\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 45\n      }\n    }))))))), /*#__PURE__*/React.createElement(Dialog, {\n      onClose: e => this.handleClose(),\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: this.state.openModel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: e => this.handleClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 21\n      }\n    }, \"Choose Columns\"), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: true,\n      style: {\n        width: 400\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 21\n      }\n    }, columns.map(item => /*#__PURE__*/React.createElement(\"label\", {\n      key: item.key,\n      style: {\n        display: \"block\"\n      },\n      className: \"checkbox-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      name: item.key,\n      checked: this.state.checkedItems.get(item.key),\n      onChange: e => this.handleColumnChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 33\n      }\n    }, \"\\xA0\", item.label)))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MButton, {\n      onClick: e => this.handleClose(true),\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 25\n      }\n    }, \"Save changes\"))));\n  }\n\n}\n\nexport default DataWareHouse;","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/src/components/DataWareHouse/DataWareHouse.js"],"names":["React","DataTable","MultiSelect","Column","env","Calendar","Button","MButton","CircularProgress","moment","Moment","MultiCascader","SettingsIcon","PerfectScrollbar","object","Highcharts","HighchartsReact","Checkbox","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","withStyles","APIHelper","sample","InputText","Paper","Grid","ExpandMoreIcon","ExpandLessIcon","Accordion","AccordionTab","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","baseColStyle","textAlign","fontSize","BASE_URL","baseUrl","isProd","columns","label","key","isSelected","defaultFilter","localStorage","getItem","DataWareHouse","Component","constructor","MAX_SELECTED","pageIndex","state","openModel","data","labTestData","vitalSIgnsData","notesSummary","datesData","isAPICallRunning","isExpanded","currSelected","checkedItems","Map","checkedColumns","providerMRN","patientMRN","patientInfo","componentDidMount","prepareColumns","inputEl","setTimeout","element","focus","renderDateFilter","onChange","event","dt","filter","value","setState","onClear","display","alignItems","datesBodyTemplate","rowData","datesBodyTemplateFroFirstPredection","renderFirstPredection","format","toString","onFilterChange","e","target","onSearch","url","alert","lastSearchUrl","then","finalDatesData","prepateDatesData","Table","Table3","length","Table1","Table2","Table4","catch","err","console","log","Table5","map","d","date","insert_timestamp","dates","Set","item","noteTypes","prepareNoteTypes","push","notetypes","NoteType","n","conditionDescription","ConditionDescription","c","plansText","Assessment_plan","problemTitle","assessment_plans","noteType","problemTitles","initNextPageData","concat","setConditionFilter","handleClickOpen","handleClose","isSave","saveColumns","handleColumnChange","name","isChecked","checked","prevState","set","selectedColumns","JSON","parse","defaultColumns","checkMap","forEach","setItem","stringify","onExpand","onCurrSelectedChanged","formatPrediction","toFixed","onPage","first","render","el","marginRight","backgroundColor","borderRadius","textTransform","marginLeft","opacity","width","float","marginBottom","PatientMRN","PatientFirstName","PatientLastName","Gender","Race","Language","Religion","PatientLastNAme","DiagnosisDate","ICD10Code","DiagnosisType","p","text","get"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../GynTable/gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { MultiSelect } from \"primereact/multiselect\";\nimport { Column } from \"primereact/column\";\nimport env from \"../../evn\";\nimport { Calendar } from \"primereact/calendar\";\nimport { Button } from \"primereact/button\";\nimport MButton from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport * as moment from \"moment\";\nimport Moment from \"react-moment\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport MultiCascader from \"rsuite/lib/MultiCascader\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { object } from \"prop-types\";\nimport * as Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport APIHelper from \"../../utils/apiHelper\";\nimport sample from \"../ConditionPredictionTable/sample.json\"\nimport { InputText } from 'primereact/inputtext';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { Accordion, AccordionTab } from 'primereact/accordion';\n// var MultiCascader = require('rsuite/lib/MultiCascader');\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: \"absolute\",\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label=\"close\"\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\nconst baseColStyle = {\n    textAlign: \"center\",\n    padding: \"1% !important\",\n    fontSize: \"13px !important\",\n    color: \"#333\",\n    position: \"relative\",\n};\n\nconst BASE_URL = env.baseUrl;\nconst isProd = env.isProd;\n\n// CHART OPTIONS\n\n\nconst columns = [\n    { label: \"Patient's MRN\", key: \"PatientMRN\", isSelected: true },\n    { label: \"Patient First Name\", key: \"PatientFirstName\", isSelected: true },\n    { label: \"Patient Last Name\", key: \"PatientLastNAme\", isSelected: true },\n    { key: \"DiagnosisDate\", label: \"Diagnosis Date\", isSelected: true },\n\n    { key: \"ICD10Code\", label: \"ICD 10 Code\", isSelected: true },\n    { key: \"ConditionDescription\", label: \"Condition Description\", isSelected: true },\n    { key: \"DiagnosisType\", label: \"Diagnosis Type\", isSelected: true },\n\n    // { key: \"ConditionValue\", label: \"Condition Value\", isSelected: true },\n    // { key: \"Location\", label: \"Location\", isSelected: true },\n\n    // { key: \"LabTestDescription\", label: \"Lab Test Description\", isSelected: true },\n    // { key: \"LabTestValue\", label: \"Lab Test Value\", isSelected: false },\n    // { key: \"Labtest_Insert_timestamp\", label: \"Lab Test Date\", isSelected: false },\n    // { key: \"VitalsDescription\", label: \"Vitals Description\", isSelected: false },\n\n    // { key: \"VitalsValue\", label: \"Vitals Value\", isSelected: false }, \n    // { key: \"Vitals_Insert_timestamp\", label: \"Vitals Date\", isSelected: false },\n\n    // { label: \"Gender\", key: \"Gender\", isSelected: false },\n    // { label: \"Race\", key: \"Race\", isSelected: false },\n    // { label: \"Language\", key: \"LANGUAGE\", isSelected: false },\n    // { label: \"Religion\", key: \"Religion\", isSelected: false },\n    // { label: \"MaritalStatus\", key: \"MaritalStatus\", isSelected: false },\n    // { label: \"Education\", key: \"Education\", isSelected: false },\n    // { label: \"Demographics Date\", key: \"Demographic_Insert_timestamp\", isSelected: false },\n    // { label: \"Provider MRN\", key: \"ProviderMRN\", isSelected: true },\n    // { label: \"Provider First Name\", key: \"ProviderFirstName\", isSelected: false },\n    // { label: \"Provider Last Name\", key: \"ProviderLastName\", isSelected: false },\n];\n\nconst defaultFilter = localStorage.getItem(\"conditions\");\n\nclass DataWareHouse extends React.Component {\n    MAX_SELECTED = 10;\n    pageIndex = 0;\n    lastSearchUrl;\n    constructor(props) {\n        super(props);\n        this.state = {\n            openModel: false,\n            data: [], // TODO : REMOVE IT\n            labTestData: [],\n            vitalSIgnsData: [],\n            notesSummary: [],\n            datesData: [],\n            isAPICallRunning: false,\n            isExpanded: false,\n            currSelected: null,\n            checkedItems: new Map(),\n            checkedColumns: {},\n            providerMRN: '',\n            patientMRN: '',\n            patientInfo: {}\n        };\n    }\n\n    componentDidMount() {\n\n        this.prepareColumns();\n        if (this.inputEl) setTimeout(() => {\n            this.inputEl.element.focus()\n        }, 1000);\n    }\n\n    renderDateFilter(key) {\n        const onChange = (event) => {\n            this.dt.filter(event.value, key, \"equals\");\n            this.setState({ [key]: event.value });\n        };\n\n        const onClear = (event) => {\n            this.dt.filter(null, key, \"equals\");\n            this.setState({ [key]: null });\n        };\n        return (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                <Calendar\n                    value={this.state[key]}\n                    onChange={onChange}\n                    selectionMode=\"single\"\n                    hideOnDateTimeSelect={true}\n                    readOnlyInput={false}\n                />\n                {this.state[key] && <i onClick={onClear} className=\"pi pi-times\"></i>}\n            </div>\n        );\n    }\n    datesBodyTemplate(rowData, key) {\n        return (\n            <>\n                {rowData[key] && (\n                    <Moment format=\"YYYY/MM/DD HH:MM:SS\">{rowData[key]}</Moment>\n                )}\n            </>\n        );\n    }\n    datesBodyTemplateFroFirstPredection(rowData, key) {\n        return <>{rowData[key] && this.renderFirstPredection(rowData, key)}</>;\n    }\n    renderFirstPredection(rowData, key) {\n        return (\n            moment(rowData[key]).format(\"YYYY/MM/DD HH:MM:SS\").toString() +\n            (rowData[\"FirstSeverity\"]\n                ? \" (\" + rowData[\"FirstSeverity\"].toString() + \")\"\n                : \"\")\n        );\n    }\n\n    onFilterChange(e, filter) {\n        this.setState({ [filter]: e.target.value });\n    }\n\n    onSearch() {\n        // BUILD URL\n        let url = `/connectivitycreation?`;\n\n        if (!this.state.patientMRN && !this.state.providerMRN) {\n            alert('Please enter patient MRN or provider MRN.')\n            return;\n        }\n        if (this.state.patientMRN) {\n            url += 'patientMRN=' + this.state.patientMRN;\n        }\n        if (this.state.providerMRN) {\n            url += 'providerMRN=' + this.state.providerMRN;\n        }\n\n        this.lastSearchUrl = url;\n\n        this.pageIndex = 0;\n        url += `&page=${this.pageIndex}`;\n\n        this.setState({ isAPICallRunning: true });\n        // send request to the server\n        APIHelper(url)\n            .then((data) => {\n\n                let finalDatesData = this.prepateDatesData(data);\n\n                this.setState({ isAPICallRunning: false });\n                this.setState({\n                    data: data.Table,\n                    isExpanded: true,\n                    patientInfo: data.Table3 && data.Table3.length > 0 ? data.Table3[0] : {},\n                    labTestData: data.Table1 || [],\n                    vitalSIgnsData: data.Table2 || [],\n                    notesSummary: data.Table4 || [],\n                    datesData: finalDatesData\n                });\n\n\n            })\n            .catch((err) => {\n                this.setState({ isAPICallRunning: false });\n                console.log(\" err :\", err);\n            });\n\n    }\n\n    prepateDatesData(data) {\n        let datesData = data.Table5 || [];\n        let finalDatesData = [];\n        if (datesData && datesData.length > 0) {\n\n            datesData.map(d => {\n                d.date = moment(d.insert_timestamp).format(\"YYYY-MM-DD\");\n            });\n            var dates = [...new Set(datesData.map((item) => item.date))];\n            dates.map(d => {\n\n\n                let noteTypes = this.prepareNoteTypes(datesData, d);\n\n                finalDatesData.push({\n                    date: d,\n                    notetypes: noteTypes\n                });\n\n\n            });\n\n            console.log(finalDatesData);\n\n        }\n        return finalDatesData;\n    }\n\n    prepareNoteTypes(datesData, date) {\n        return [...new Set(datesData.filter(d => d.date === date).map((item) => item.NoteType))].map(n => {\n\n            let conditionDescription = [...new Set(datesData.filter(d => d.date === date && d.NoteType == n).map((item) => item.ConditionDescription))].map(c => {\n\n                let plansText = [...new Set(datesData.filter(d => d.date === date && d.NoteType == n && d.ConditionDescription == c).map((item) => item.Assessment_plan))];\n\n                return {\n                    problemTitle: c,\n                    assessment_plans: plansText\n                }\n            });\n            return {\n                noteType: n,\n                problemTitles: conditionDescription\n            };\n        });\n    }\n\n    initNextPageData() {\n        this.pageIndex++;\n        let url = `${this.lastSearchUrl}&page=${this.pageIndex}`;\n        console.log(\"url :\", url);\n        if (isProd) {\n            APIHelper(url).then((data) => {\n                this.setState({ data: this.state.data.concat(data) });\n            });\n        }\n    }\n    setConditionFilter(c) { }\n    handleClickOpen() {\n        this.setState({ openModel: true });\n        this.prepareColumns();\n    }\n    handleClose(isSave) {\n        this.setState({ openModel: false });\n        if (isSave) {\n            this.saveColumns();\n        }\n    }\n    handleColumnChange(e) {\n        const item = e.target.name;\n        const isChecked = e.target.checked;\n        this.setState((prevState) => ({\n            checkedItems: prevState.checkedItems.set(item, isChecked),\n        }));\n    }\n    prepareColumns() {\n        var selectedColumns = localStorage.getItem(\"selected_columns_data_warehouse_v3\");\n        if (selectedColumns) selectedColumns = JSON.parse(selectedColumns);\n        else selectedColumns = this.defaultColumns();\n\n        var checkMap = new Map();\n        for (const key in selectedColumns) {\n            checkMap.set(key, selectedColumns[key]);\n        }\n        this.setState({ checkedColumns: selectedColumns, checkedItems: checkMap });\n    }\n    saveColumns() {\n        var selectedColumns = this.defaultColumns();\n        this.state.checkedItems.forEach((value, key) => {\n            selectedColumns[key] = value;\n        });\n        this.setState({ checkedColumns: selectedColumns });\n        localStorage.setItem(\"selected_columns_data_warehouse_v3\", JSON.stringify(selectedColumns));\n    }\n    defaultColumns() {\n        var selectedColumns = {};\n        columns.map((c) => {\n            selectedColumns[c.key] = c.isSelected;\n        });\n        return selectedColumns;\n    }\n    onExpand() {\n        this.setState({\n            isExpanded: !this.state.isExpanded\n        })\n    }\n    onCurrSelectedChanged(item) {\n\n    }\n\n    formatPrediction(value) {\n        if (!value || typeof (value) != \"number\") return value;\n\n        return value.toFixed('1');\n    }\n\n    onPage(e) {\n        // {first: 55, rows: 5, page: 11, pageCount: 12}\n        // let isLastPage = e.page === e.pageCount - 1;\n\n        // if (isLastPage) {\n        //   //    need to load more data here;\n        //   this.initNextPageData();\n        // }\n        console.log(\"e :\", e);\n        this.setState({ first: e.first });\n    }\n\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"gyn-table-container main-container warehouse\">\n                    <div className=\"header\">\n                        <h3>SPAI Data Warehouse</h3>\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <InputText\n                                value={this.state.patientMRN}\n                                ref={(el) => this.inputEl = el}\n                                style={{ marginRight: \"15px\", backgroundColor: '#f5fdff' }}\n                                onChange={(e) => this.onFilterChange(e, \"patientMRN\")}\n                                placeholder={\"Patient MRN\"}\n                            />\n\n                            <InputText\n                                value={this.state.providerMRN}\n                                style={{ marginRight: \"15px\" }}\n                                onChange={(e) => this.onFilterChange(e, \"providerMRN\")}\n                                placeholder={\"Provider MRN\"}\n                            />\n\n\n                            <Button\n                                label=\"Search\"\n                                style={{\n                                    display: this.state.isAPICallRunning ? \"none\" : \"inline-flex\",\n                                }}\n                                onClick={() => {\n                                    this.onSearch();\n                                }}\n                            />\n                            <MButton\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className=\"btnProgress\"\n                                style={{\n                                    borderRadius: 3,\n                                    textTransform: \"none\",\n                                    marginLeft: \"5px\",\n                                    opacity: \"0.7\",\n                                    width: \"230px\",\n                                    display: !this.state.isAPICallRunning\n                                        ? \"none\"\n                                        : \"inline-flex\",\n                                }}\n                            >\n                                <CircularProgress color=\"primary\" size=\"1.5rem\" />\n                                &nbsp;&nbsp;Processing..\n                            </MButton>\n\n                            <IconButton\n                                aria-label=\"expand\"\n                                onClick={() => {\n                                    this.onExpand();\n                                }}\n                            >\n\n                                {!this.state.isExpanded ?\n                                    <ExpandMoreIcon />\n                                    :\n                                    <ExpandLessIcon />\n                                }\n                            </IconButton>\n\n                        </div>\n                    </div>\n\n                    <div className={\"content widget-drawer \" + (this.state.isExpanded ? 'visible' : '')}>\n                        {this.state.patientInfo &&\n                            <Grid container spacing={3}>\n                                <Grid item xs={4}>\n                                    <h4 style={{\n                                        display: \"inline-flex\",\n                                        float: \"left\",\n                                        margin: \"0px\",\n                                        marginBottom: \"20px\",\n                                    }}\n                                    >Patient information</h4>\n                                    <div style={{\n                                        width: '100%'\n                                    }}>\n                                        {this.state.patientInfo && this.state.patientInfo.PatientMRN &&\n                                            <React.Fragment>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Patient MRN</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.PatientMRN}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Patient First Name</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.PatientFirstName}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Patient Last Name</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.PatientLastName}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Gender</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.Gender}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Race</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.Race}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Language</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.Language}</div>\n                                                </div>\n                                                <div className=\"width-100\">\n                                                    <div className=\"width-50\">Religion</div>\n                                                    <div className=\"width-50\">{this.state.patientInfo.Religion}</div>\n                                                </div>\n                                            </React.Fragment>\n                                        }\n                                    </div>\n                                </Grid>\n                                <Grid item xs={8}>\n\n                                    <div className=\"table\" style={{ width: '100%' }}>\n                                        <h4 style={{\n                                            display: \"inline-flex\",\n                                            float: \"left\",\n                                            margin: \"0px\",\n                                            marginBottom: \"10px\",\n                                        }}\n                                        >Medical Conditions (Diagnosis, Medical Hx, Historical Dx, Procedures)</h4>\n                                        {/* <a\n                                        onClick={(e) => this.handleClickOpen()}\n                                        className=\"float-right\"\n                                        style={{\n                                            cursor: \"pointer\",\n                                            display: \"inline-flex\",\n                                            float: \"right\", \n                                            marginBottom: \"5px\",\n                                        }}\n                                    >\n                                        <SettingsIcon style={{ width: \"18px\", height: \"17px\" }} />\n                &nbsp;Choose Columns\n              </a> */}\n\n                                        <DataTable\n                                            ref={(el) => (this.dt = el)}\n                                            value={this.state.data}\n                                            sortMode=\"multiple\"\n                                            selectionMode=\"single\"\n                                            // multiSortMeta={[\n                                            //     {\n                                            //         field: \"PredictionDate\",\n                                            //         order: -1,\n                                            //     },\n                                            //     {\n                                            //         field: \"EstRiskScaleSTInNum\",\n                                            //         order: -1,\n                                            //     },\n                                            // ]}\n                                            paginator\n                                            rows={5}\n\n                                            first={this.state.first}\n                                            sortX={true}\n                                            selection={this.state.currSelected}\n                                            onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n                                            onPage={(e) => this.onPage(e)}\n                                            emptyMessage=\"No Results found\"\n                                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n                                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\"\n                                            rowsPerPageOptions={[5, 10, 25, 50]}\n                                        >\n                                            {this.state.checkedColumns &&\n                                                this.state.checkedColumns.PatientMRN === true && (\n                                                    <Column\n                                                        field=\"PatientMRN\"\n                                                        sortField=\"PatientMRN\"\n                                                        header=\"Patient's MRN\"\n                                                        sortable\n                                                        style={baseColStyle}\n                                                    />\n                                                )}\n\n                                            {this.state.checkedColumns &&\n                                                this.state.checkedColumns.PatientFirstName === true && (\n                                                    <Column\n                                                        field=\"PatientFirstName\"\n                                                        header=\"Patient First Name\"\n                                                        sortable\n                                                        style={baseColStyle}\n                                                    />\n                                                )}\n\n                                            {this.state.checkedColumns &&\n                                                this.state.checkedColumns.PatientLastNAme === true && (\n                                                    <Column\n                                                        field=\"PatientLastName\"\n                                                        header=\"Patient Last Name\"\n                                                        sortable\n                                                        style={baseColStyle}\n                                                    />\n                                                )}\n\n                                            {this.state.checkedColumns &&\n                                                this.state.checkedColumns.DiagnosisDate === true && (\n                                                    <Column\n                                                        field=\"DiagnosisDate\"\n                                                        header=\"Diagnosis Date\"\n                                                        sortable\n                                                        style={baseColStyle}\n                                                    />\n                                                )}\n\n\n\n                                            {this.state.checkedColumns && this.state.checkedColumns.ICD10Code === true && (\n                                                <Column\n                                                    field=\"ICD10Code\"\n                                                    header=\"ICD 10 Code\"\n                                                    sortable\n                                                    style={baseColStyle}\n                                                />\n                                            )}\n\n                                            {this.state.checkedColumns && this.state.checkedColumns.ConditionDescription === true && (\n                                                <Column\n                                                    field=\"ConditionDescription\"\n                                                    header=\"Condition Description\"\n                                                    sortable\n                                                    style={baseColStyle}\n                                                />\n                                            )}\n\n\n\n\n                                            {this.state.checkedColumns && this.state.checkedColumns.DiagnosisType === true && (\n                                                <Column\n                                                    field=\"DiagnosisType\"\n                                                    header=\"Diagnosis Type\"\n                                                    sortable\n                                                    style={baseColStyle}\n                                                />\n                                            )}\n\n\n\n                                        </DataTable>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={6}>\n\n                                    <div className=\"table\" style={{ width: '100%' }}>\n                                        <h4 style={{\n                                            display: \"inline-flex\",\n                                            float: \"left\",\n                                            margin: \"0px\",\n                                            marginBottom: \"10px\",\n                                        }}\n                                        >Notes Summary</h4>\n                                        <DataTable\n                                            // ref={(el) => (this.dt = el)}\n                                            value={this.state.notesSummary}\n                                            sortMode=\"multiple\"\n                                            selectionMode=\"single\"\n                                            paginator\n                                            rows={5}\n\n                                            // first={this.state.first}\n                                            sortX={true}\n                                            // selection={this.state.currSelected}\n                                            // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n                                            // onPage={(e) => this.onPage(e)}\n                                            emptyMessage=\"No Results found\"\n                                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n                                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\"\n                                            rowsPerPageOptions={[5, 10, 25, 50]}\n                                        >\n                                            <Column\n                                                field=\"PatientMRN\"\n                                                sortField=\"PatientMRN\"\n                                                header=\"Patient MRN\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientFirstName\"\n                                                header=\"Patient First Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientLastName\"\n                                                header=\"Patient Last Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"DiagnosisDate\"\n                                                header=\"Diagnosis Date\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"ConditionDescription\"\n                                                header=\"Condition Description\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"ICD10Code\"\n                                                header=\"ICD10 Code\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"BillingCode\"\n                                                header=\"DRG\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"DiagnosisType\"\n                                                header=\"Diagnosis Type\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"Source\"\n                                                header=\"Source\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                        </DataTable>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={6} className={\"text-align-left\"}>\n                                    <React.Fragment>\n                                        <h4 style={{  \n                                            margin: \"0px\",\n                                            marginBottom: \"10px\",\n                                        }}>Notes - Assessment and Plan</h4>\n                                        <Accordion>\n\n                                            {this.state.datesData.map((d) => (\n                                                <AccordionTab header={d.date} key={d.date}>\n                                                    <Accordion  >\n\n                                                        {d.notetypes.map((n) => (\n                                                            <AccordionTab header={n.noteType} key={n.noteType}>\n                                                                <Accordion  >\n\n                                                                    {n.problemTitles.map((p) => (\n                                                                        <AccordionTab header={p.problemTitle} key={p.problemTitle}>\n                                                                            <ul>\n                                                                                {p.assessment_plans.map((text) => (\n                                                                                    <li key={text}>{text}</li>\n                                                                                ))}\n                                                                            </ul>\n                                                                        </AccordionTab>\n                                                                    ))}\n\n                                                                </Accordion>\n                                                            </AccordionTab>\n                                                        ))}\n\n                                                    </Accordion>\n                                                </AccordionTab>\n                                            ))}\n\n                                        </Accordion>\n                                        {(!this.state.datesData || this.state.datesData.length == 0) && (\n                                            <p>No results found.</p>\n                                        )}\n\n                                    </React.Fragment>\n\n                                </Grid>\n                                <Grid item xs={6}>\n\n                                    <div className=\"table\" style={{ width: '100%' }}>\n                                        <h4 style={{\n                                            display: \"inline-flex\",\n                                            float: \"left\",\n                                            margin: \"0px\",\n                                            marginBottom: \"10px\",\n                                        }}\n                                        >Lab Tests</h4>\n                                        <DataTable\n                                            // ref={(el) => (this.dt = el)}\n                                            value={this.state.labTestData}\n                                            sortMode=\"multiple\"\n                                            selectionMode=\"single\"\n                                            paginator\n                                            rows={5}\n\n                                            // first={this.state.first}\n                                            sortX={true}\n                                            // selection={this.state.currSelected}\n                                            // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n                                            // onPage={(e) => this.onPage(e)}\n                                            emptyMessage=\"No Results found\"\n                                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n                                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\"\n                                            rowsPerPageOptions={[5, 10, 25, 50]}\n                                        >\n                                            <Column\n                                                field=\"PatientMRN\"\n                                                sortField=\"PatientMRN\"\n                                                header=\"Patient MRN\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientFirstName\"\n                                                header=\"Patient First Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientLastName\"\n                                                header=\"Patient Last Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"LabTest_timestamp\"\n                                                header=\"Lab Test timestamp\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"LabTestDescription\"\n                                                header=\"Lab Test Description\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"LabTestValue\"\n                                                header=\"LabTest Value\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"LabTest_ValueRange\"\n                                                header=\"Lab Test Value Range\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                        </DataTable>\n                                    </div>\n                                </Grid>\n                                <Grid item xs={6}>\n\n                                    <div className=\"table\" style={{ width: '100%' }}>\n                                        <h4 style={{\n                                            display: \"inline-flex\",\n                                            float: \"left\",\n                                            margin: \"0px\",\n                                            marginBottom: \"10px\",\n                                        }}\n                                        >Vital Signs</h4>\n                                        <DataTable\n                                            // ref={(el) => (this.dt = el)}\n                                            value={this.state.vitalSIgnsData}\n                                            sortMode=\"multiple\"\n                                            selectionMode=\"single\"\n                                            paginator\n                                            rows={5}\n\n                                            // first={this.state.first}\n                                            sortX={true}\n                                            // selection={this.state.currSelected}\n                                            // onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n                                            // onPage={(e) => this.onPage(e)}\n                                            emptyMessage=\"No Results found\"\n                                            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n                                            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport\"\n                                            rowsPerPageOptions={[5, 10, 25, 50]}\n                                        >\n                                            <Column\n                                                field=\"PatientMRN\"\n                                                sortField=\"PatientMRN\"\n                                                header=\"Patient MRN\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientFirstName\"\n                                                header=\"Patient First Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"PatientLastName\"\n                                                header=\"Patient Last Name\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"LabTest_timestamp\"\n                                                header=\"Vitals timestamp\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"VitalsDescription\"\n                                                header=\"Vitals Description\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n\n\n                                            <Column\n                                                field=\"VitalsValue\"\n                                                header=\"Vitals Value\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                            <Column\n                                                field=\"Vitals_ValueRange\"\n                                                header=\"Vitals Value Range\"\n                                                sortable\n                                                style={baseColStyle}\n                                            />\n                                        </DataTable>\n                                    </div>\n                                </Grid>\n\n                            </Grid>\n\n                        }\n\n\n                    </div>\n                </div>\n                <Dialog\n                    onClose={(e) => this.handleClose()}\n                    aria-labelledby=\"customized-dialog-title\"\n                    open={this.state.openModel}\n                >\n                    <DialogTitle\n                        id=\"customized-dialog-title\"\n                        onClose={(e) => this.handleClose()}\n                    >\n                        Choose Columns\n                    </DialogTitle>\n                    <DialogContent dividers style={{ width: 400 }}>\n                        {columns.map((item) => (\n                            <label\n                                key={item.key}\n                                style={{ display: \"block\" }}\n                                className=\"checkbox-list\"\n                            >\n                                <Checkbox\n                                    name={item.key}\n                                    checked={this.state.checkedItems.get(item.key)}\n                                    onChange={(e) => this.handleColumnChange(e)}\n                                />\n                                <span>&nbsp;{item.label}</span>\n                            </label>\n                        ))}\n                    </DialogContent>\n                    <DialogActions>\n                        <MButton onClick={(e) => this.handleClose(true)} color=\"primary\">\n                            Save changes\n                        </MButton>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default DataWareHouse;\n"]},"metadata":{},"sourceType":"module"}