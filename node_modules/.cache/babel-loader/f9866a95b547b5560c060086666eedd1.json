{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hammad\\\\FrontEnd\\\\ClientApp\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"primereact/resources/themes/nova/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"./App.css\";\nimport jsonData from \"./assets/data/mocked\";\nimport env from \"./evn\";\nimport { Button } from \"primereact/button\";\nimport JourneyTable from \"./components/JourneyTable/JourneyTable\";\nimport { Dialog } from \"primereact/dialog\";\nimport { InputText } from \"primereact/inputtext\";\nimport moment from \"moment\";\nimport GynTable from \"./components/GynTable/GynTable\";\nimport ExposureGraphOverTime from \"./components/ExposureGraphOverTime/ExposureGraphOverTime\";\nimport ExposureMap from \"./components/ExposureMap/ExposureMap\";\nimport ConditionPredictionTable from \"./components/ConditionPredictionTable/ConditionPredictionTable\";\nimport ProbabilityGraphOverTime from \"./components/ProbabilityGraphOverTime/ProbabilityGraphOverTime\";\nimport FeatureImportanceGraph from \"./components/FeatureImportanceGraph/FeatureImportanceGraph\";\nimport APIHelper from '../src/utils/apiHelper';\nimport DataWareHouseTwo from \"./components/DataWareHouse/DataWareHouseTwo\";\nconst isProd = env.isProd;\nconst BASE_URL = env.baseUrl;\nconst USER_SIGN = \"userSign\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataForOverTime: [],\n      probabilityDataOverTime: [],\n      currSelected: null,\n      dataForJourney: [],\n      displayTerms: false,\n      username: null,\n      isUserSign: false\n    };\n  } // LIFECYCLES\n\n\n  componentDidMount() {\n    // check if user already sign on the terms of use\n    const userSign = JSON.parse(localStorage.getItem(USER_SIGN));\n\n    if (userSign) {\n      // if the user sign check that is not expired ( every sign expired after 24 hours)\n      // the time that the user sign\n      const signDate = moment(userSign.date);\n      const expireDate = signDate.add(24, \"hours\");\n      const currDate = moment(); // if the sign is expired\n\n      if (expireDate.isBefore(currDate)) {\n        // remove from localstorage\n        localStorage.removeItem(USER_SIGN); // show the popup to sign again\n\n        this.showTermsPopup();\n      } else {\n        // if is still valid just set isUserSign as true\n        this.setState({\n          isUserSign: true\n        });\n      }\n    } else {\n      this.showTermsPopup();\n    } // init data for the main table\n    // this.initGynTableData();\n\n  } // init data for the main table\n\n\n  initGynTableData() {\n    // in prod mode\n    if (isProd) {\n      // build the url\n      const url = `/exposure/details`; // send request to the serve\n\n      APIHelper(url).then(data => {\n        // mapping all the InfectionType props to be COVID-19 and sort the data base on SeenOrder\n        const d = data // .map((o) => {\n        //   o.InfectionType = \"COVID-19\";\n        //   return o;\n        // })\n        .sort((a, b) => a.SeenOrder - b.SeenOrder); // set the data in the state\n\n        this.setState({\n          data: d\n        });\n      }).catch(err => {// Do something for an error here\n      });\n    } // in dev mode\n    else {\n        // mapping all the InfectionType props to be COVID-19 and sort the data base on SeenOrder\n        const d = jsonData.data // .map((o) => {\n        //   o.InfectionType = \"COVID-19\";\n        //   return o;\n        // })\n        .sort((a, b) => a.SeenOrder - b.SeenOrder); // Work with JSON data here\n\n        console.log(\"init MOCKED data after mapping :\", d);\n        setTimeout(() => {\n          this.setState({\n            data: d\n          });\n        }, 5000);\n        console.log(\"jsonData :\", d);\n      }\n  } // get data for the sub table\n\n\n  getDataForJourney(currSelected, datesFilter) {\n    console.log(\"getDataForJourney\");\n    console.log(\"currSelected :\", currSelected); // get PatientMRN and ProviderMRN props from currSelected\n\n    const {\n      PatientMRN,\n      ProviderMRN\n    } = currSelected; // build url with params\n\n    let url = `/exposure/journey?patientMRN=${PatientMRN}&providerMRN=${ProviderMRN}`; // if user filter by dates append the dates to the url params\n\n    if (datesFilter) {\n      const {\n        fromDate,\n        toDate\n      } = datesFilter;\n      url += `&startDate=${fromDate}&endDate=${toDate}`;\n    } // send request to the server\n\n\n    APIHelper(url).then(data => {\n      console.log(\"dataForJourney:\", data); // set the server response data in the state\n\n      this.setState({\n        dataForJourney: data\n      });\n    }).catch(err => {\n      console.log(\"updateMap err :\", err);\n    });\n  } // setters\n\n\n  setCurrSelected(currSelected, datesFilter) {\n    // in case component send string PINDEX instead of object\n    if (typeof currSelected === \"string\") {\n      // check if the PINDEX exist in the data\n      if (this.state.data.some(d => d.PINDEX === currSelected)) {\n        // if so get reference to the object\n        currSelected = this.state.data.find(d => d.PINDEX === currSelected); // set data for the chart line\n\n        const dataForOverTime = this.state.data.filter(row => row.PINDEX === currSelected.PINDEX);\n        this.setDataForOverTime(dataForOverTime);\n      } else {\n        return;\n      }\n    } // set data for the sec table (base on the current selected)\n\n\n    this.getDataForJourney(currSelected, datesFilter);\n    this.setState({\n      currSelected: currSelected\n    });\n  }\n\n  setDataForOverTime(data) {\n    this.setState({\n      dataForOverTime: data\n    });\n  }\n\n  setProbabilityDataOverTime(data) {\n    this.setState({\n      probabilityDataOverTime: data\n    });\n  }\n\n  setData(data) {\n    this.setState({\n      data: data\n    });\n  } // terms of use logic\n\n\n  registerOnTermsOfUse(name) {\n    // build url ans request option\n    const url = `/termsofuse`;\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name\n      })\n    }; // in prod mode send request to the server\n\n    if (isProd) {\n      APIHelper(url, requestOptions).then(data => {\n        // hide the popup\n        this.onHide(\"displayTerms\"); // set user sign in local storage - it will use to recognize that the user already sign on the terms\n\n        localStorage.setItem(USER_SIGN, JSON.stringify({\n          isSign: true,\n          name: name,\n          date: new Date()\n        }));\n        this.setState({\n          isUserSign: true\n        });\n      });\n    } else {\n      // if is in dev mode just hide the popup and update the local storage\n      this.onHide(\"displayTerms\");\n      localStorage.setItem(USER_SIGN, JSON.stringify({\n        isSign: true,\n        name: name,\n        date: new Date()\n      }));\n      this.setState({\n        isUserSign: true\n      });\n    }\n  }\n\n  showTermsPopup() {\n    this.setState({\n      displayTerms: true\n    });\n  }\n\n  onHide(name) {\n    this.setState({\n      [`${name}`]: false\n    });\n  } // render the footer in the terms popup\n\n\n  renderFooter(name) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: require(\"./assets/terms.docx\"),\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, \"Download the Terms of use\"), /*#__PURE__*/React.createElement(InputText, {\n      style: {\n        width: \"30%\"\n      },\n      placeholder: \"Your name\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !this.state.username,\n      label: \"I Agree the Terms \",\n      icon: \"pi pi-check\",\n      onClick: () => this.registerOnTermsOfUse(this.state.username),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container header-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"./assets/Logo.png\"),\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"20\",\n      height: \"23\",\n      viewBox: \"0 0 20 23\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.99994 11C2.99994 7.68629 5.68623 5 8.99994 5C12.3136 5 14.9999 7.68629 14.9999 11V12.831C14.9999 14.2503 15.3857 15.6429 16.1159 16.8599L16.6693 17.7823C17.0364 18.3941 17.2199 18.7 17.2325 18.9497C17.252 19.3366 17.0462 19.6999 16.7045 19.8823C16.4838 20 16.1271 20 15.4137 20H2.58624C1.8728 20 1.51608 20 1.29543 19.8823C0.953675 19.6999 0.747969 19.3366 0.767435 18.9497C0.780004 18.7 0.963532 18.3941 1.33059 17.7823L1.884 16.8599C2.61421 15.6429 2.99994 14.2503 2.99994 12.831V11Z\",\n      fill: \"#1A97DC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M11.35 21C11.4328 21 11.5007 21.0673 11.493 21.1498C11.4484 21.6254 11.1923 22.0746 10.7678 22.4142C10.2989 22.7893 9.66304 23 9 23C8.33696 23 7.70107 22.7893 7.23223 22.4142C6.80772 22.0746 6.55165 21.6254 6.50702 21.1498C6.49928 21.0673 6.56716 21 6.65 21L9 21L11.35 21Z\",\n      fill: \"#1A97DC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      cx: \"17.5\",\n      cy: \"2.5\",\n      r: \"2.5\",\n      fill: \"#FF5353\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container main-container\",\n      style: {\n        display: this.state.isUserSign ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DataWareHouseTwo, {\n      data: this.state.data,\n      setProbabilityDataOverTime: s => this.setProbabilityDataOverTime(s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ConditionPredictionTable, {\n      data: this.state.data,\n      setProbabilityDataOverTime: s => this.setProbabilityDataOverTime(s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ProbabilityGraphOverTime, {\n      data: this.state.probabilityDataOverTime,\n      selectedItem: this.state.currSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FeatureImportanceGraph, {\n      data: this.state.probabilityDataOverTime,\n      selectedItem: this.state.currSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(GynTable, {\n      data: this.state.data,\n      setDataForOverTime: s => this.setDataForOverTime(s),\n      setData: s => this.setData(s),\n      selectedItem: this.state.currSelected,\n      onSelectedChanged: (selected, datesFilter) => this.setCurrSelected(selected, datesFilter),\n      searchData: () => this.initGynTableData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(JourneyTable, {\n      data: this.state.dataForJourney,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ExposureGraphOverTime, {\n      data: this.state.dataForOverTime,\n      selectedItem: this.state.currSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      header: \"Gynsius Terms & Condition \",\n      visible: this.state.displayTerms,\n      style: {\n        width: \"40vw\"\n      },\n      onHide: () => this.onHide(\"displayTerms\"),\n      footer: this.renderFooter(\"displayTerms\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-term main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, \"GYNISUS TERMS OF USE \"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        width: \"70%\",\n        textAlign: \"left\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 13\n      }\n    }, \"Read the following carefully, as your purchase or use of our product(s) implies that you have read and accepted our Terms of Use. We reserved the right to change or modify current Terms of Use with no prior notice.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 15\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 22\n      }\n    }), \"This platform, Infectious Diseases Monitor, (hereafter referred to as Infectious Diseases Monitor, or Platform) is owned and operated by Gynisus (hereinafter referred as Gynisus, we or Company). Please read, review and be sure you understand our Terms of Use prior to downloading or using any of the materials or products from Gynisus. You should carefully read all of our terms and conditions as your purchase or use of any Gynisus product(s), membership, or services and use of the Product and any materials or Products available herein identifies that you agree to the following Terms of Use and that you agree to be bound by these terms and conditions accordingly. If you do not agree to these terms, then you should not use any of the materials or Products available herein, and/or not subscribe to this service\", \" \"))));\n  }\n\n}\n\nexport default App; // function App() {\n//   const [currSelected, setCurrSelected] = useState({});\n//   const [dataForOverTime, setDataForOverTime] = useState([]);\n//   const [data, setData] = useState([]);\n//\n//   const initData = () => {\n//       const d = jsonData.data.map( o =>  {\n//           o.InfectionType = 'COVID-19';\n//           return o;\n//       }).sort( (a,b) => a.SeenOrder - b.SeenOrder);\n//       setData(d);\n//   }\n//\n//   initData();\n//\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={require('./assets/logo-header.png')} className=\"App-logo\" alt=\"logo\" />\n//       </header>\n//         <div className=\"content-container\">\n//             <GynTable\n//                 data={data}\n//                 setDataForOverTime={setDataForOverTime}\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)}/>\n//             <ExposureGraphOverTime\n//                 data={dataForOverTime}\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)}/>\n//             <ExposureMap\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)} />\n//         </div>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/src/App.js"],"names":["React","jsonData","env","Button","JourneyTable","Dialog","InputText","moment","GynTable","ExposureGraphOverTime","ExposureMap","ConditionPredictionTable","ProbabilityGraphOverTime","FeatureImportanceGraph","APIHelper","DataWareHouseTwo","isProd","BASE_URL","baseUrl","USER_SIGN","App","Component","constructor","props","state","data","dataForOverTime","probabilityDataOverTime","currSelected","dataForJourney","displayTerms","username","isUserSign","componentDidMount","userSign","JSON","parse","localStorage","getItem","signDate","date","expireDate","add","currDate","isBefore","removeItem","showTermsPopup","setState","initGynTableData","url","then","d","sort","a","b","SeenOrder","catch","err","console","log","setTimeout","getDataForJourney","datesFilter","PatientMRN","ProviderMRN","fromDate","toDate","setCurrSelected","some","PINDEX","find","filter","row","setDataForOverTime","setProbabilityDataOverTime","setData","registerOnTermsOfUse","name","requestOptions","method","headers","body","stringify","onHide","setItem","isSign","Date","renderFooter","display","justifyContent","require","width","e","target","value","render","s","selected","textAlign","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"primereact/resources/themes/nova/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\nimport \"./App.css\";\nimport jsonData from \"./assets/data/mocked\";\nimport env from \"./evn\";\nimport { Button } from \"primereact/button\";\nimport JourneyTable from \"./components/JourneyTable/JourneyTable\";\nimport { Dialog } from \"primereact/dialog\";\nimport { InputText } from \"primereact/inputtext\";\nimport moment from \"moment\";\nimport GynTable from \"./components/GynTable/GynTable\";\nimport ExposureGraphOverTime from \"./components/ExposureGraphOverTime/ExposureGraphOverTime\";\nimport ExposureMap from \"./components/ExposureMap/ExposureMap\";\nimport ConditionPredictionTable from \"./components/ConditionPredictionTable/ConditionPredictionTable\";\nimport ProbabilityGraphOverTime from \"./components/ProbabilityGraphOverTime/ProbabilityGraphOverTime\";\nimport FeatureImportanceGraph from \"./components/FeatureImportanceGraph/FeatureImportanceGraph\";\nimport APIHelper from '../src/utils/apiHelper'\nimport DataWareHouseTwo from \"./components/DataWareHouse/DataWareHouseTwo\";\n\nconst isProd = env.isProd;\nconst BASE_URL = env.baseUrl;\nconst USER_SIGN = \"userSign\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataForOverTime: [],\n      probabilityDataOverTime: [],\n      currSelected: null,\n      dataForJourney: [],\n      displayTerms: false,\n      username: null,\n      isUserSign: false,\n    };\n  }\n\n  // LIFECYCLES\n  componentDidMount() {\n   \n    // check if user already sign on the terms of use\n    const userSign = JSON.parse(localStorage.getItem(USER_SIGN));\n    if (userSign) {\n      // if the user sign check that is not expired ( every sign expired after 24 hours)\n      // the time that the user sign\n      const signDate = moment(userSign.date);\n      const expireDate = signDate.add(24, \"hours\");\n      const currDate = moment();\n\n      // if the sign is expired\n      if (expireDate.isBefore(currDate)) {\n        // remove from localstorage\n        localStorage.removeItem(USER_SIGN);\n        // show the popup to sign again\n        this.showTermsPopup();\n      } else {\n        // if is still valid just set isUserSign as true\n        this.setState({ isUserSign: true });\n      }\n    } else {\n      this.showTermsPopup();\n    }\n\n     // init data for the main table\n    // this.initGynTableData();\n  }\n\n  // init data for the main table\n  initGynTableData() {\n    // in prod mode\n    if (isProd) {\n      // build the url\n      const url = `/exposure/details`;\n      // send request to the serve\n      APIHelper(url)\n        .then((data) => {\n          // mapping all the InfectionType props to be COVID-19 and sort the data base on SeenOrder\n          const d = data\n            // .map((o) => {\n            //   o.InfectionType = \"COVID-19\";\n            //   return o;\n            // })\n            .sort((a, b) => a.SeenOrder - b.SeenOrder);\n          // set the data in the state\n          this.setState({ data: d });\n        })\n        .catch((err) => {\n          // Do something for an error here\n        });\n    }\n    // in dev mode\n    else {\n      // mapping all the InfectionType props to be COVID-19 and sort the data base on SeenOrder\n      const d = jsonData.data\n        // .map((o) => {\n        //   o.InfectionType = \"COVID-19\";\n        //   return o;\n        // })\n        .sort((a, b) => a.SeenOrder - b.SeenOrder);\n      // Work with JSON data here\n      console.log(\"init MOCKED data after mapping :\", d);\n    setTimeout(()=>{\n      this.setState({ data: d });\n    }, 5000);\n      console.log(\"jsonData :\", d);\n    }\n  }\n  // get data for the sub table\n  getDataForJourney(currSelected, datesFilter) {\n    console.log(\"getDataForJourney\");\n    console.log(\"currSelected :\", currSelected);\n\n    // get PatientMRN and ProviderMRN props from currSelected\n    const { PatientMRN, ProviderMRN } = currSelected;\n    // build url with params\n    let url = `/exposure/journey?patientMRN=${PatientMRN}&providerMRN=${ProviderMRN}`;\n    // if user filter by dates append the dates to the url params\n    if (datesFilter) {\n      const { fromDate, toDate } = datesFilter;\n      url += `&startDate=${fromDate}&endDate=${toDate}`;\n    }\n    // send request to the server\n      APIHelper(url)\n      .then((data) => {\n        console.log(\"dataForJourney:\", data);\n        // set the server response data in the state\n        this.setState({ dataForJourney: data });\n      })\n      .catch((err) => {\n        console.log(\"updateMap err :\", err);\n      });\n  }\n\n  // setters\n  setCurrSelected(currSelected, datesFilter) {\n    // in case component send string PINDEX instead of object\n    if (typeof currSelected === \"string\") {\n      // check if the PINDEX exist in the data\n      if (this.state.data.some((d) => d.PINDEX === currSelected)) {\n        // if so get reference to the object\n        currSelected = this.state.data.find((d) => d.PINDEX === currSelected);\n        // set data for the chart line\n        const dataForOverTime = this.state.data.filter(\n          (row) => row.PINDEX === currSelected.PINDEX\n        );\n        this.setDataForOverTime(dataForOverTime);\n      } else {\n        return;\n      }\n    }\n    // set data for the sec table (base on the current selected)\n    this.getDataForJourney(currSelected, datesFilter);\n    this.setState({ currSelected: currSelected });\n  }\n  setDataForOverTime(data) {\n    this.setState({ dataForOverTime: data });\n  }\n  setProbabilityDataOverTime(data) {\n    this.setState({ probabilityDataOverTime: data });\n  }\n  setData(data) {\n    this.setState({ data: data });\n  }\n\n  // terms of use logic\n  registerOnTermsOfUse(name) {\n    // build url ans request option\n    const url = `/termsofuse`;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name }),\n    };\n\n    // in prod mode send request to the server\n    if (isProd) {\n      APIHelper(url, requestOptions)\n        .then((data) => {\n          // hide the popup\n          this.onHide(\"displayTerms\");\n          // set user sign in local storage - it will use to recognize that the user already sign on the terms\n          localStorage.setItem(\n            USER_SIGN,\n            JSON.stringify({ isSign: true, name: name, date: new Date() })\n          );\n          this.setState({ isUserSign: true });\n        });\n    } else {\n      // if is in dev mode just hide the popup and update the local storage\n      this.onHide(\"displayTerms\");\n      localStorage.setItem(\n        USER_SIGN,\n        JSON.stringify({ isSign: true, name: name, date: new Date() })\n      );\n      this.setState({ isUserSign: true });\n    }\n  }\n  showTermsPopup() {\n    this.setState({ displayTerms: true });\n  }\n  onHide(name) {\n    this.setState({\n      [`${name}`]: false,\n    });\n  }\n\n  // render the footer in the terms popup\n  renderFooter(name) {\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        {/* Download terms file link */}\n        <a href={require(\"./assets/terms.docx\")} download>\n          Download the Terms of use\n        </a>\n        {/*USER NAME*/}\n        <InputText\n          style={{ width: \"30%\" }}\n          placeholder={\"Your name\"}\n          value={this.state.username}\n          onChange={(e) => this.setState({ username: e.target.value })}\n        />\n        <div>\n          {/* Agree BTN */}\n          <Button\n            disabled={!this.state.username}\n            label=\"I Agree the Terms \"\n            icon=\"pi pi-check\"\n            onClick={() => this.registerOnTermsOfUse(this.state.username)}\n          />\n          {/*<Button label=\"No\" icon=\"pi pi-times\" onClick={() => this.onHide(name)} className=\"p-button-secondary\"/>*/}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n\n    return (\n      <div className=\"App \">\n        {/*WHITE HEADER*/}\n        <header className=\"App-header\">\n          <div className=\"main-container header-wrap\">\n            <div className = \"logo-wrap\" >\n              <img\n                src={require(\"./assets/Logo.png\")}\n                className=\"App-logo\"\n                alt=\"logo\"\n              />\n              </div>\n            <div className=\"notification-wrap\">\n              <svg width=\"20\" height=\"23\" viewBox=\"0 0 20 23\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.99994 11C2.99994 7.68629 5.68623 5 8.99994 5C12.3136 5 14.9999 7.68629 14.9999 11V12.831C14.9999 14.2503 15.3857 15.6429 16.1159 16.8599L16.6693 17.7823C17.0364 18.3941 17.2199 18.7 17.2325 18.9497C17.252 19.3366 17.0462 19.6999 16.7045 19.8823C16.4838 20 16.1271 20 15.4137 20H2.58624C1.8728 20 1.51608 20 1.29543 19.8823C0.953675 19.6999 0.747969 19.3366 0.767435 18.9497C0.780004 18.7 0.963532 18.3941 1.33059 17.7823L1.884 16.8599C2.61421 15.6429 2.99994 14.2503 2.99994 12.831V11Z\" fill=\"#1A97DC\"/>\n                <path d=\"M11.35 21C11.4328 21 11.5007 21.0673 11.493 21.1498C11.4484 21.6254 11.1923 22.0746 10.7678 22.4142C10.2989 22.7893 9.66304 23 9 23C8.33696 23 7.70107 22.7893 7.23223 22.4142C6.80772 22.0746 6.55165 21.6254 6.50702 21.1498C6.49928 21.0673 6.56716 21 6.65 21L9 21L11.35 21Z\" fill=\"#1A97DC\"/>\n                <circle cx=\"17.5\" cy=\"2.5\" r=\"2.5\" fill=\"#FF5353\"/>\n                </svg>\n            </div>\n            </div>\n        </header>\n\n        {/*APP CONTENT*/}\n        <div\n          className=\"content-container main-container\"\n          style={{ display: this.state.isUserSign ? \"block\" : \"none\" }}\n        >\n\n        <DataWareHouseTwo\n            data={this.state.data}\n            setProbabilityDataOverTime={(s) =>\n              this.setProbabilityDataOverTime(s)\n            }\n          />\n\n          <ConditionPredictionTable\n            data={this.state.data}\n            setProbabilityDataOverTime={(s) =>\n              this.setProbabilityDataOverTime(s)\n            }\n          />\n\n          <div style={{width: '100%', display: 'inline-block'}}>\n          <ProbabilityGraphOverTime\n            data={this.state.probabilityDataOverTime}\n            selectedItem={this.state.currSelected}\n          />\n            <FeatureImportanceGraph\n            data={this.state.probabilityDataOverTime}\n            selectedItem={this.state.currSelected}\n          />\n          </div>\n\n          {/* MAIN TABLE*/}\n          <GynTable\n            data={this.state.data}\n            setDataForOverTime={(s) => this.setDataForOverTime(s)}\n            setData={(s) => this.setData(s)}\n            selectedItem={this.state.currSelected}\n            onSelectedChanged={(selected, datesFilter) =>\n              this.setCurrSelected(selected, datesFilter)\n            }\n            searchData={() =>\n              this.initGynTableData()\n            }\n          />\n\n          {/*  SUB TABLE  */}\n          <JourneyTable data={this.state.dataForJourney} />\n\n          {/*  LINE CHART */}\n          <ExposureGraphOverTime\n            data={this.state.dataForOverTime}\n            selectedItem={this.state.currSelected}\n          />\n          {/*<ExposureMap*/}\n          {/*    selectedItem={this.state.currSelected}*/}\n          {/*    onSelectedChanged={(selected) => this.setCurrSelected(selected)} />*/}\n        </div>\n\n        {/*DIALOG - TERMS OF USE*/}\n        <Dialog\n          header=\"Gynsius Terms & Condition \"\n          visible={this.state.displayTerms}\n          style={{ width: \"40vw\" }}\n          onHide={() => this.onHide(\"displayTerms\")}\n          footer={this.renderFooter(\"displayTerms\")}\n        >\n          <div className={\"content-term main-container\"}>\n            <h4>GYNISUS TERMS OF USE </h4>\n            <p style={{ width: \"70%\", textAlign: \"left\", margin: \"0 auto\" }}>\n              Read the following carefully, as your purchase or use of our\n              product(s) implies that you have read and accepted our Terms of\n              Use. We reserved the right to change or modify current Terms of\n              Use with no prior notice.\n              <br /> <br />\n              This platform, Infectious Diseases Monitor, (hereafter referred to\n              as Infectious Diseases Monitor, or Platform) is owned and operated\n              by Gynisus (hereinafter referred as Gynisus, we or Company).\n              Please read, review and be sure you understand our Terms of Use\n              prior to downloading or using any of the materials or products\n              from Gynisus. You should carefully read all of our terms and\n              conditions as your purchase or use of any Gynisus product(s),\n              membership, or services and use of the Product and any materials\n              or Products available herein identifies that you agree to the\n              following Terms of Use and that you agree to be bound by these\n              terms and conditions accordingly. If you do not agree to these\n              terms, then you should not use any of the materials or Products\n              available herein, and/or not subscribe to this service{\" \"}\n            </p>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default App;\n// function App() {\n//   const [currSelected, setCurrSelected] = useState({});\n//   const [dataForOverTime, setDataForOverTime] = useState([]);\n//   const [data, setData] = useState([]);\n//\n//   const initData = () => {\n//       const d = jsonData.data.map( o =>  {\n//           o.InfectionType = 'COVID-19';\n//           return o;\n//       }).sort( (a,b) => a.SeenOrder - b.SeenOrder);\n//       setData(d);\n//   }\n//\n//   initData();\n//\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={require('./assets/logo-header.png')} className=\"App-logo\" alt=\"logo\" />\n//       </header>\n//         <div className=\"content-container\">\n//             <GynTable\n//                 data={data}\n//                 setDataForOverTime={setDataForOverTime}\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)}/>\n//             <ExposureGraphOverTime\n//                 data={dataForOverTime}\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)}/>\n//             <ExposureMap\n//                 selectedItem={currSelected}\n//                 onSelectedChanged={(selected) => setCurrSelected(selected)} />\n//         </div>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}