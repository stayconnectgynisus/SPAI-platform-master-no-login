{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hammad\\\\FrontEnd\\\\ClientApp\\\\src\\\\components\\\\GynTable\\\\GynTable.js\";\nimport React from \"react\";\nimport \"./gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Calendar } from \"primereact/calendar\";\nimport { InputText } from \"primereact/inputtext\";\nimport Moment from \"react-moment\";\nimport env from \"../../evn\";\nimport * as moment from \"moment\";\nimport { CSVLink } from \"react-csv\";\nimport \"mapbox-gl-leaflet\";\nimport \"leaflet.vectorgrid\";\nimport { Button } from \"primereact/button\";\nimport MButton from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Circle, CircleMarker, Map, Marker, Polygon, Polyline, Popup, Rectangle, TileLayer } from \"react-leaflet\";\nimport APIHelper from \"../../utils/apiHelper\"; // import MapboxGlLayer from '@mongodb-js/react-mapbox-gl-leaflet';\n\nconst baseColStyle = {\n  textAlign: \"center\",\n  padding: \"1%\",\n  fontSize: \"0.7rem\"\n};\nconst BASE_URL = \"/exposure/details\";\nconst isProd = env.isProd; // 47.379/8.5375\n// 13/4289/2869\n\nconst center = [42.89, 28.69]; // Headers for csv file\n\nconst headers = [{\n  label: \"PINDEX\",\n  key: \"PINDEX\"\n}, {\n  label: \"PROINDEX\",\n  key: \"PROINDEX\"\n}, {\n  label: \"Patient MRN\",\n  key: \"PatientMRN\"\n}, {\n  label: \"Provider MRN\",\n  key: \"ProviderMRN\"\n}, {\n  label: \"Provider First Name\",\n  key: \"ProviderFirstName\"\n}, {\n  label: \"Provider Last Name\",\n  key: \"ProviderLastName\"\n}, {\n  label: \"Exposure Date\",\n  key: \"ExposureDate\"\n}, {\n  label: \"Exposure Type\",\n  key: \"ExposureType\"\n}, {\n  label: \"Result Status\",\n  key: \"ResultStatus\"\n}, {\n  label: \"Total InteractionCount\",\n  key: \"TotalInteractionCount\"\n}, {\n  label: \"Result Date\",\n  key: \"ResultDate\"\n}]; // 13.62/47.37862/8.55126\n\nconst position = [47.3543, 8.5496];\n\nclass GynTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.asyncFilterList = [\"PatientMRN\", \"ProviderMRN\", \"ToDate\", \"FromDate\"];\n    this.state = {\n      data: [],\n      isAPICallRunning: false,\n      currSelected: null,\n      filters: {\n        infectionType: null,\n        resultStatus: null,\n        fromDate: null,\n        dateFilter: null,\n        toDate: null,\n        exposureType: null\n      },\n      asyncFilters: {}\n    }; //body cells\n\n    this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\n  } // LIFECYCLES\n\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedItem !== this.props.selectedItem) {\n      this.setState({\n        currSelected: this.props.selectedItem\n      });\n    }\n\n    if (prevProps.data !== this.props.data) {\n      const data = this.props.data;\n      data.sort((a, b) => new Date(b.ExposureDate).getTime() - new Date(a.ExposureDate).getTime());\n      this.setState({\n        data: data\n      });\n    }\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {// const map = window.L.map('map', {\n    //     center: center,\n    //     zoom: 9\n    // });\n    // map.options.minZoom = 2;\n    // const gl = window.L.mapboxGL({\n    //     // accessToken: '1',\n    //     style: require('../../assets/style.json'),\n    //     zoom: 9\n    // }).addTo(map);\n    // map.fitWorld();\n    // http://192.168.99.100:32771/data/v3/10/535/358.pbf\n    // const openMapTilesUrl = 'http://192.168.99.100:32771/data/v3/{z}/{x}/{y}.pbf';\n    // const openMapTilesLayer = window.L.vectorGrid.protobuf(openMapTilesUrl, {\n    //     vectorTileLayerStyles: require('../../assets/style.json'),\n    //     // subdomains: '0123',\n    //     attribution: '© OpenStreetMap contributors, © MapTiler',\n    //     // key: 'abcdefghi01234567890' // Get yours at https://maptiler.com/cloud/\n    // });\n    // openMapTilesLayer.addTo(map);\n  }\n\n  componentWillUnmount() {} // TEMPLATES\n\n\n  statusBodyTemplate(rowData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      className: `status-${rowData.ResultStatus.toLowerCase()}  status-label`,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, rowData.ResultStatus));\n  }\n\n  datesBodyTemplate(rowData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY/MM/DD - HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, rowData.ExposureDate));\n  }\n\n  onSearch() {\n    this.setState({\n      isAPICallRunning: true\n    });\n    this.props.searchData();\n  } // FILTERS\n\n\n  renderInfectionFilter(rowData) {\n    const options = [{\n      label: \"COVID-19\",\n      value: \"COVID-19\"\n    }, {\n      label: \"MRSA\",\n      value: \"MRSA\"\n    }, {\n      label: \"Cdiff\",\n      value: \"Cdiff\"\n    }];\n\n    const onChange = event => {\n      this.dt.filter(event.value, \"InfectionType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          infectionType: event.value\n        }\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, \"InfectionType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          infectionType: null\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.filters.infectionType,\n      options: options,\n      onChange: onChange,\n      placeholder: \"Infection Type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }), this.state.filters.infectionType && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderResultStatusFilter() {\n    const options = [{\n      label: \"Pending\",\n      value: \"pending\"\n    }, {\n      label: \"Suspect\",\n      value: \"suspect\"\n    }, {\n      label: \"Positive\",\n      value: \"positive\"\n    }, {\n      label: \"Negative\",\n      value: \"negative\"\n    }];\n\n    const onChange = event => {\n      this.dt.filter(event.value, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          resultStatus: event.value\n        }\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          resultStatus: null\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.filters.resultStatus,\n      options: options,\n      onChange: onChange,\n      placeholder: \"Results Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }), this.state.filters.resultStatus && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderExposureTypeFilter() {\n    const options = [{\n      label: \"Direct\",\n      value: \"Direct\"\n    }, {\n      label: \"Indirect\",\n      value: \"Indirect\"\n    }, {\n      label: \"No Exposure\",\n      value: \"No Exposure\"\n    }];\n\n    const onChange = event => {\n      this.dt.filter(event.value, \"ExposureType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          exposureType: event.value\n        }\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, \"ExposureType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          exposureType: null\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.filters.exposureType,\n      options: options,\n      onChange: onChange,\n      placeholder: \"Results Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }\n    }), this.state.filters.exposureType && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderDateFilter() {\n    const onChange = event => {\n      this.dt.filter(event.value, \"dates\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          dateFilter: event.value\n        }\n      });\n\n      if (event.value[0] && event.value[1]) {\n        setTimeout(() => {\n          this.onAsyncFilterChanged();\n        });\n      }\n    };\n\n    const onClear = event => {\n      console.log(\"onClear \");\n      this.dt.filter(null, \"dates\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          dateFilter: null\n        }\n      });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      value: this.state.filters.dateFilter,\n      onChange: onChange,\n      selectionMode: \"range\",\n      hideOnDateTimeSelect: true,\n      readOnlyInput: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }), this.state.filters.dateFilter && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderMRNFilter(key) {\n    const onChange = event => {\n      this.dt.filter(event, key, \"contains\");\n      this.setState({\n        asyncFilters: { ...this.state.asyncFilters,\n          [key]: event\n        }\n      });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, key, \"contains\");\n      this.setState({\n        asyncFilters: { ...this.state.asyncFilters,\n          [key]: null\n        }\n      });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      value: this.state.asyncFilters[key],\n      onChange: e => onChange(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }\n    }), this.state.filters.exposureType && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }\n    }));\n  } // EVENTS\n\n\n  onAsyncFilterChanged() {\n    // get startDate and endDate for filter params\n    const dates = this.getDatesFilters();\n    let searchParams = new URLSearchParams({ ...this.state.asyncFilters\n    }).toString(); // if date exist add dates to url as params\n\n    if (dates) {\n      searchParams += `&startDate=${dates.fromDate}&endDate=${dates.toDate}`;\n    }\n\n    console.log(searchParams); // in prod env\n\n    if (isProd) {\n      const url = `${BASE_URL}?${searchParams}`;\n      console.log(\"onAsyncFilterChanged url :\", url); //    need to verify that is working implement\n\n      APIHelper(url).then(data => {\n        console.log(\"onAsyncFilterChanged :\", data); // mapping all the InfectionType to be COVID-19\n\n        const d = data // .map((o) => {\n        //   return o;\n        // })\n        .sort((a, b) => a.SeenOrder - b.SeenOrder);\n        console.log(\"onAsyncFilterChanged mapping :\", d); // set data in parent component (App.js)\n\n        this.props.setData(d);\n      }).catch(err => {\n        console.log(\"onAsyncFilterChanged err :\", err);\n      });\n    }\n  }\n\n  onCurrSelectedChanged(item) {\n    // get data for the over time graph (the line chart)\n    const dataForOverTime = this.state.data.filter(row => row.PINDEX === item.PINDEX); // set dataForOverTime in the parent component (App.js)\n\n    this.props.setDataForOverTime(dataForOverTime); // set current selected in current component\n\n    this.setState({\n      currSelected: item\n    });\n    const dates = this.getDatesFilters(); // emit on selected change event in parent component\n\n    this.props.onSelectedChanged(item, dates);\n  }\n\n  onFilterChanged(e) {\n    // wait to react to render the dom and update the state\n    setTimeout(() => {\n      // get the key name of the current chaged filter\n      const key = Object.keys(e.filters)[0]; //  check if is async filter ( is so need to send request to the server to bring data)\n\n      if (this.asyncFilterList.includes(key)) {\n        // if is async filter update the asyncFilters object in the state\n        this.setState({\n          asyncFilters: { ...this.state.asyncFilters,\n            [key]: e.filters[key].value\n          }\n        });\n        console.log(\"asyncFilters :\", this.state.asyncFilters); // call onAsyncFilterChanged handler\n\n        this.onAsyncFilterChanged();\n      } else {// if is local filter do some logic here...\n      }\n    });\n  } // HELPERS\n\n\n  getDatesFilters() {\n    const {\n      dateFilter\n    } = this.state.filters;\n    let dates = null; // if fromDate and toDate is exist (the user select range)\n\n    if (dateFilter && dateFilter[0] && dateFilter[1]) {\n      // set dates with format \"YYYY-MM-DD\" - it means YEAR-MONTH-DAY\n      dates = {\n        fromDate: moment(this.state.filters.dateFilter[0]).format(\"YYYY-MM-DD\").toString(),\n        toDate: moment(this.state.filters.dateFilter[1]).format(\"YYYY-MM-DD\").toString()\n      };\n    }\n\n    return dates;\n  }\n\n  render() {\n    console.log(this.props.data);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gyn-table-container Detailed-Exposure-Map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    }, \"Detailed Exposure Map\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export\",\n      style: {\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      label: \"Search\",\n      style: {\n        display: this.state.isAPICallRunning || this.state.data && this.state.data.length > 0 ? 'none' : 'inline-flex'\n      },\n      onClick: () => {\n        this.onSearch();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MButton, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"btnProgress\",\n      style: {\n        borderRadius: 3,\n        textTransform: 'none',\n        marginLeft: '5px',\n        opacity: '0.7',\n        display: !this.state.isAPICallRunning || this.state.data && this.state.data.length > 0 ? 'none' : 'inline-flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: \"1.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 15\n      }\n    }), \"\\xA0\\xA0Processing..\"), this.state.data && this.state.data.length > 0 && /*#__PURE__*/React.createElement(CSVLink, {\n      data: this.state.data,\n      headers: headers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, \"Export to CSV\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.data,\n      selectionMode: \"single\",\n      selection: this.state.currSelected,\n      onSelectionChange: e => this.onCurrSelectedChanged(e.value),\n      paginator: true,\n      rows: 5,\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      header: \"Patient's MRN\",\n      filter: true,\n      filterElement: this.renderMRNFilter(\"PatientMRN\"),\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderMRN\",\n      header: \"Provider's MRN\",\n      filter: true,\n      filterElement: this.renderMRNFilter(\"ProviderMRN\"),\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderFirstName\",\n      header: \"Provider's First Name\",\n      sortable: true,\n      filter: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderLastName\",\n      header: \"Provider's Surname\",\n      filter: true,\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ExposureType\",\n      header: \"Exposure Type\",\n      filter: true,\n      filterElement: this.renderExposureTypeFilter(),\n      sortable: true,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ExposureDate\",\n      header: \"Dates\",\n      headerStyle: {\n        width: \"15%\"\n      },\n      filter: true,\n      filterElement: this.renderDateFilter(),\n      body: this.datesBodyTemplate,\n      sortable: true,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"InfectionType\",\n      header: \"Infection Type\",\n      filter: true,\n      filterElement: this.renderInfectionFilter(),\n      sortable: true,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ResultStatus\",\n      header: \"Result Status\",\n      filter: true,\n      filterElement: this.renderResultStatusFilter(),\n      sortable: true,\n      body: this.statusBodyTemplate,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Department\",\n      header: \"Department\",\n      filter: true,\n      sortable: true,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default GynTable;","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/src/components/GynTable/GynTable.js"],"names":["React","DataTable","Column","Dropdown","Calendar","InputText","Moment","env","moment","CSVLink","Button","MButton","CircularProgress","Circle","CircleMarker","Map","Marker","Polygon","Polyline","Popup","Rectangle","TileLayer","APIHelper","baseColStyle","textAlign","padding","fontSize","BASE_URL","isProd","center","headers","label","key","position","GynTable","Component","constructor","props","asyncFilterList","state","data","isAPICallRunning","currSelected","filters","infectionType","resultStatus","fromDate","dateFilter","toDate","exposureType","asyncFilters","statusBodyTemplate","bind","componentDidUpdate","prevProps","selectedItem","setState","sort","a","b","Date","ExposureDate","getTime","componentWillMount","componentDidMount","componentWillUnmount","rowData","ResultStatus","toLowerCase","datesBodyTemplate","onSearch","searchData","renderInfectionFilter","options","value","onChange","event","dt","filter","onClear","display","alignItems","renderResultStatusFilter","renderExposureTypeFilter","renderDateFilter","setTimeout","onAsyncFilterChanged","console","log","renderMRNFilter","e","target","dates","getDatesFilters","searchParams","URLSearchParams","toString","url","then","d","SeenOrder","setData","catch","err","onCurrSelectedChanged","item","dataForOverTime","row","PINDEX","setDataForOverTime","onSelectedChanged","onFilterChanged","Object","keys","includes","format","render","float","length","borderRadius","textTransform","marginLeft","opacity","el","overflow","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { Calendar } from \"primereact/calendar\";\nimport { InputText } from \"primereact/inputtext\";\nimport Moment from \"react-moment\";\nimport env from \"../../evn\";\nimport * as moment from \"moment\";\nimport { CSVLink } from \"react-csv\";\nimport \"mapbox-gl-leaflet\";\nimport \"leaflet.vectorgrid\";\nimport { Button } from \"primereact/button\";\nimport MButton from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  Circle,\n  CircleMarker,\n  Map,\n  Marker,\n  Polygon,\n  Polyline,\n  Popup,\n  Rectangle,\n  TileLayer,\n} from \"react-leaflet\";\nimport APIHelper from \"../../utils/apiHelper\";\n// import MapboxGlLayer from '@mongodb-js/react-mapbox-gl-leaflet';\nconst baseColStyle = { textAlign: \"center\", padding : \"1%\", fontSize: \"0.7rem\" };\nconst BASE_URL =   \"/exposure/details\";\nconst isProd = env.isProd;\n\n// 47.379/8.5375\n// 13/4289/2869\nconst center = [42.89, 28.69];\n\n// Headers for csv file\nconst headers = [\n  { label: \"PINDEX\", key: \"PINDEX\" },\n  { label: \"PROINDEX\", key: \"PROINDEX\" },\n  { label: \"Patient MRN\", key: \"PatientMRN\" },\n  { label: \"Provider MRN\", key: \"ProviderMRN\" },\n  { label: \"Provider First Name\", key: \"ProviderFirstName\" },\n  { label: \"Provider Last Name\", key: \"ProviderLastName\" },\n  { label: \"Exposure Date\", key: \"ExposureDate\" },\n  { label: \"Exposure Type\", key: \"ExposureType\" },\n  { label: \"Result Status\", key: \"ResultStatus\" },\n  { label: \"Total InteractionCount\", key: \"TotalInteractionCount\" },\n  { label: \"Result Date\", key: \"ResultDate\" },\n];\n// 13.62/47.37862/8.55126\nconst position = [47.3543, 8.5496];\nclass GynTable extends React.Component {\n  asyncFilterList = [\"PatientMRN\", \"ProviderMRN\", \"ToDate\", \"FromDate\"];\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isAPICallRunning: false,\n      currSelected: null,\n      filters: {\n        infectionType: null,\n        resultStatus: null,\n        fromDate: null,\n        dateFilter: null,\n        toDate: null,\n        exposureType: null,\n      },\n      asyncFilters: {},\n    };\n    //body cells\n    this.statusBodyTemplate = this.statusBodyTemplate.bind(this);\n  }\n\n  // LIFECYCLES\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedItem !== this.props.selectedItem) {\n      this.setState({ currSelected: this.props.selectedItem });\n    }     \n    if (prevProps.data !== this.props.data) {\n      const data = this.props.data;\n      data.sort(\n        (a, b) =>\n          new Date(b.ExposureDate).getTime() -\n          new Date(a.ExposureDate).getTime()\n      );\n      this.setState({ data: data });\n    }\n  }\n\n  componentWillMount() { }\n  componentDidMount() {\n    // const map = window.L.map('map', {\n    //     center: center,\n    //     zoom: 9\n    // });\n    // map.options.minZoom = 2;\n    // const gl = window.L.mapboxGL({\n    //     // accessToken: '1',\n    //     style: require('../../assets/style.json'),\n    //     zoom: 9\n    // }).addTo(map);\n    // map.fitWorld();\n    // http://192.168.99.100:32771/data/v3/10/535/358.pbf\n    // const openMapTilesUrl = 'http://192.168.99.100:32771/data/v3/{z}/{x}/{y}.pbf';\n    // const openMapTilesLayer = window.L.vectorGrid.protobuf(openMapTilesUrl, {\n    //     vectorTileLayerStyles: require('../../assets/style.json'),\n    //     // subdomains: '0123',\n    //     attribution: '© OpenStreetMap contributors, © MapTiler',\n    //     // key: 'abcdefghi01234567890' // Get yours at https://maptiler.com/cloud/\n    // });\n    // openMapTilesLayer.addTo(map);\n  }\n  componentWillUnmount() { }\n\n  // TEMPLATES\n  statusBodyTemplate(rowData) {\n    return (\n      <>\n        <span\n          className={`status-${rowData.ResultStatus.toLowerCase()}  status-label`}\n          style={{}}\n        >\n          {rowData.ResultStatus}\n        </span>\n      </>\n    );\n  }\n  datesBodyTemplate(rowData) {\n    return (\n      <>\n        <Moment format=\"YYYY/MM/DD - HH:mm\">{rowData.ExposureDate}</Moment>\n      </>\n    );\n  }\n\n  onSearch(){\n      this.setState({ isAPICallRunning: true });\n      this.props.searchData();\n  }\n  // FILTERS\n  renderInfectionFilter(rowData) {\n    const options = [\n      { label: \"COVID-19\", value: \"COVID-19\" },\n      { label: \"MRSA\", value: \"MRSA\" },\n      { label: \"Cdiff\", value: \"Cdiff\" },\n    ];\n    const onChange = (event) => {\n      this.dt.filter(event.value, \"InfectionType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, infectionType: event.value },\n      });\n    };\n\n    const onClear = (event) => {\n      this.dt.filter(null, \"InfectionType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, infectionType: null },\n      });\n    };\n\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Dropdown\n          value={this.state.filters.infectionType}\n          options={options}\n          onChange={onChange}\n          placeholder=\"Infection Type\"\n        />\n        {this.state.filters.infectionType && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n  renderResultStatusFilter() {\n    const options = [\n      { label: \"Pending\", value: \"pending\" },\n      { label: \"Suspect\", value: \"suspect\" },\n      { label: \"Positive\", value: \"positive\" },\n      { label: \"Negative\", value: \"negative\" },\n    ];\n    const onChange = (event) => {\n      this.dt.filter(event.value, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, resultStatus: event.value },\n      });\n    };\n    const onClear = (event) => {\n      this.dt.filter(null, \"ResultStatus\", \"equals\");\n      this.setState({ filters: { ...this.state.filters, resultStatus: null } });\n    };\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Dropdown\n          value={this.state.filters.resultStatus}\n          options={options}\n          onChange={onChange}\n          placeholder=\"Results Status\"\n        />\n        {this.state.filters.resultStatus && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n  renderExposureTypeFilter() {\n    const options = [\n      { label: \"Direct\", value: \"Direct\" },\n      { label: \"Indirect\", value: \"Indirect\" },\n      { label: \"No Exposure\", value: \"No Exposure\" },\n    ];\n    const onChange = (event) => {\n      this.dt.filter(event.value, \"ExposureType\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, exposureType: event.value },\n      });\n    };\n    const onClear = (event) => {\n      this.dt.filter(null, \"ExposureType\", \"equals\");\n      this.setState({ filters: { ...this.state.filters, exposureType: null } });\n    };\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Dropdown\n          value={this.state.filters.exposureType}\n          options={options}\n          onChange={onChange}\n          placeholder=\"Results Status\"\n        />\n        {this.state.filters.exposureType && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n  renderDateFilter() {\n    const onChange = (event) => { \n      this.dt.filter(event.value, \"dates\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, dateFilter: event.value },\n      });\n\n      if (event.value[0] && event.value[1]) {\n        setTimeout(() => {\n          this.onAsyncFilterChanged();\n        });\n      }\n    };\n\n    const onClear = (event) => {\n      console.log(\"onClear \");\n      this.dt.filter(null, \"dates\", \"equals\");\n      this.setState({ filters: { ...this.state.filters, dateFilter: null } });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Calendar\n          value={this.state.filters.dateFilter}\n          onChange={onChange}\n          selectionMode=\"range\"\n          hideOnDateTimeSelect={true}\n          readOnlyInput={false}\n        />\n        {this.state.filters.dateFilter && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n\n  renderMRNFilter(key) {\n    const onChange = (event) => {\n      this.dt.filter(event, key, \"contains\");\n      this.setState({\n        asyncFilters: { ...this.state.asyncFilters, [key]: event },\n      });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n    const onClear = (event) => {\n      this.dt.filter(null, key, \"contains\");\n      this.setState({\n        asyncFilters: { ...this.state.asyncFilters, [key]: null },\n      });\n      setTimeout(() => {\n        this.onAsyncFilterChanged();\n      });\n    };\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <InputText\n          value={this.state.asyncFilters[key]}\n          onChange={(e) => onChange(e.target.value)}\n        />\n        {this.state.filters.exposureType && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n\n  // EVENTS\n  onAsyncFilterChanged() {\n    // get startDate and endDate for filter params\n    const dates = this.getDatesFilters();\n    let searchParams = new URLSearchParams({\n      ...this.state.asyncFilters,\n    }).toString();\n    // if date exist add dates to url as params\n    if (dates) {\n      searchParams += `&startDate=${dates.fromDate}&endDate=${dates.toDate}`;\n    } \n    console.log(searchParams);\n    // in prod env\n    if (isProd) {\n      const url = `${BASE_URL}?${searchParams}`;\n      console.log(\"onAsyncFilterChanged url :\", url);\n      //    need to verify that is working implement\n      APIHelper(url)\n        .then((data) => {\n          console.log(\"onAsyncFilterChanged :\", data);\n          // mapping all the InfectionType to be COVID-19\n          const d = data\n            // .map((o) => {\n            //   return o;\n            // })\n            .sort((a, b) => a.SeenOrder - b.SeenOrder);\n\n          console.log(\"onAsyncFilterChanged mapping :\", d);\n          // set data in parent component (App.js)\n          this.props.setData(d);\n        })\n        .catch((err) => {\n          console.log(\"onAsyncFilterChanged err :\", err);\n        });\n    }\n  }\n  onCurrSelectedChanged(item) {\n    // get data for the over time graph (the line chart)\n    const dataForOverTime = this.state.data.filter(\n      (row) => row.PINDEX === item.PINDEX\n    );\n    // set dataForOverTime in the parent component (App.js)\n    this.props.setDataForOverTime(dataForOverTime);\n    // set current selected in current component\n    this.setState({ currSelected: item });\n    const dates = this.getDatesFilters();\n    // emit on selected change event in parent component\n    this.props.onSelectedChanged(item, dates);\n  }\n  onFilterChanged(e) {\n    // wait to react to render the dom and update the state\n    setTimeout(() => {\n      // get the key name of the current chaged filter\n      const key = Object.keys(e.filters)[0];\n      //  check if is async filter ( is so need to send request to the server to bring data)\n      if (this.asyncFilterList.includes(key)) {\n        // if is async filter update the asyncFilters object in the state\n        this.setState({\n          asyncFilters: {\n            ...this.state.asyncFilters,\n            [key]: e.filters[key].value,\n          },\n        });\n        console.log(\"asyncFilters :\", this.state.asyncFilters);\n        // call onAsyncFilterChanged handler\n        this.onAsyncFilterChanged();\n      } else {\n        // if is local filter do some logic here...\n      }\n    });\n  }\n  // HELPERS\n  getDatesFilters() {\n    const { dateFilter } = this.state.filters;\n    let dates = null;\n    // if fromDate and toDate is exist (the user select range)\n    if (dateFilter && dateFilter[0] && dateFilter[1]) {\n      // set dates with format \"YYYY-MM-DD\" - it means YEAR-MONTH-DAY\n      dates = {\n        fromDate: moment(this.state.filters.dateFilter[0])\n          .format(\"YYYY-MM-DD\")\n          .toString(),\n        toDate: moment(this.state.filters.dateFilter[1])\n          .format(\"YYYY-MM-DD\")\n          .toString(),\n      };\n    }\n    return dates;\n  }\n\n  render() {\n    console.log(this.props.data);\n\n    return (\n      <>\n        <div className=\"gyn-table-container Detailed-Exposure-Map\">\n          {/* CSV export */}\n\n          <div className=\"header\">\n            <h3 style={{ float: 'left' }}>Detailed Exposure Map</h3>\n            <div className=\"export\" style={{ float: 'right' }}>\n             \n            <Button\n              label=\"Search\"\n              style={{ display: (this.state.isAPICallRunning || (this.state.data && this.state.data.length > 0) ? 'none' : 'inline-flex') }}\n              onClick={() => {\n                this.onSearch();\n              }}\n            />\n             <MButton\n              variant=\"contained\"\n              color=\"primary\"\n\n              className=\"btnProgress\"\n              style={{ borderRadius: 3, textTransform: 'none', marginLeft: '5px', opacity: '0.7', \n              display: (!this.state.isAPICallRunning || (this.state.data && this.state.data.length > 0)? 'none' : 'inline-flex') }}\n\n            >\n              <CircularProgress color=\"primary\" size=\"1.5rem\" />\n              &nbsp;&nbsp;Processing..\n            </MButton>\n           \n            {\n            this.state.data && this.state.data.length > 0 && \n            <CSVLink data={this.state.data} headers={headers}>\n                Export to CSV\n            </CSVLink>\n            }\n              \n            </div>\n          </div>\n          <div className=\"content\">\n            {/* TABLE ELEMENT*/}\n            <DataTable\n              ref={(el) => (this.dt = el)}\n              value={this.state.data}\n              selectionMode=\"single\"\n              selection={this.state.currSelected}\n              onSelectionChange={(e) => this.onCurrSelectedChanged(e.value)}\n              paginator\n              rows={5}\n              emptyMessage=\"No Results found\"\n              currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n              paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n              rowsPerPageOptions={[5, 10, 25, 50]}\n            >\n              <Column\n                field=\"PatientMRN\"\n                header=\"Patient's MRN\"\n                filter\n                filterElement={this.renderMRNFilter(\"PatientMRN\")}\n                sortable\n                style={baseColStyle}\n              />\n              <Column\n                field=\"ProviderMRN\"\n                header=\"Provider's MRN\"\n                filter\n                filterElement={this.renderMRNFilter(\"ProviderMRN\")}\n                sortable\n                style={baseColStyle}\n              />\n              <Column\n                field=\"ProviderFirstName\"\n                header=\"Provider's First Name\"\n                sortable\n                filter\n                style={baseColStyle}\n              />\n              <Column\n                field=\"ProviderLastName\"\n                header=\"Provider's Surname\"\n                filter\n                sortable\n                style={baseColStyle}\n              />\n              <Column\n                field=\"ExposureType\"\n                header=\"Exposure Type\"\n                filter\n                filterElement={this.renderExposureTypeFilter()}\n                sortable\n                style={{ ...baseColStyle, overflow: \"inherit\" }}\n              />\n              <Column\n                field=\"ExposureDate\"\n                header=\"Dates\"\n                headerStyle={{ width: \"15%\" }}\n                filter\n                filterElement={this.renderDateFilter()}\n                body={this.datesBodyTemplate}\n                sortable\n                style={{ ...baseColStyle, overflow: \"inherit\" }}\n              />\n              <Column\n                field=\"InfectionType\"\n                header=\"Infection Type\"\n                filter\n                filterElement={this.renderInfectionFilter()}\n                sortable\n                style={{ ...baseColStyle, overflow: \"inherit\" }}\n              />\n              <Column\n                field=\"ResultStatus\"\n                header=\"Result Status\"\n                filter\n                filterElement={this.renderResultStatusFilter()}\n                sortable\n                body={this.statusBodyTemplate}\n                style={{ ...baseColStyle, overflow: \"inherit\" }}\n              />\n              <Column\n                field=\"Department\"\n                header=\"Department\"\n                filter\n                sortable\n                style={{ ...baseColStyle, overflow: \"inherit\" }}\n              />\n            </DataTable>\n          </div>\n        </div>\n        {/*<div id=\"map\"></div>*/}\n\n        {/*<Map center={center} zoom={5}>*/}\n        {/*    <MapboxGlLayer*/}\n        {/*        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\n        {/*        style={require('../../assets/style.json')}*/}\n        {/*    />*/}\n        {/*</Map>*/}\n      </>\n    );\n  }\n}\n\nexport default GynTable;\n"]},"metadata":{},"sourceType":"module"}