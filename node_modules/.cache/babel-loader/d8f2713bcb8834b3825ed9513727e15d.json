{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = getDOMNode;\n\nvar _reactDom = require(\"react-dom\");\n\nfunction getDOMNode(element) {\n  var _element$getHTMLEleme;\n  /**\n   * Native HTML elements\n   */\n\n\n  if (element === null || element === void 0 ? void 0 : element.nodeType) {\n    return element;\n  }\n  /**\n   * The component provides the `getHTMLElement` method.\n   */\n\n\n  var htmlElement = element === null || element === void 0 ? void 0 : (_element$getHTMLEleme = element.getHTMLElement) === null || _element$getHTMLEleme === void 0 ? void 0 : _element$getHTMLEleme.call(element);\n\n  if (htmlElement) {\n    return htmlElement;\n  }\n  /**\n   * If you can't get the native HTML element, you can only get it through findDOMNode.\n   */\n  // eslint-disable-next-line react/no-find-dom-node\n\n\n  return (0, _reactDom.findDOMNode)(element);\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/node_modules/rsuite/lib/utils/getDOMNode.js"],"names":["exports","__esModule","default","getDOMNode","_reactDom","require","element","_element$getHTMLEleme","nodeType","htmlElement","getHTMLElement","call","findDOMNode","module"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASF,UAAT,CAAoBG,OAApB,EAA6B;AAC3B,MAAIC,qBAAJ;AAEA;;;;;AAGA,MAAID,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACE,QAA9D,EAAwE;AACtE,WAAOF,OAAP;AACD;AACD;;;;;AAKA,MAAIG,WAAW,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkD,CAACC,qBAAqB,GAAGD,OAAO,CAACI,cAAjC,MAAqD,IAArD,IAA6DH,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAACI,IAAtB,CAA2BL,OAA3B,CAA7K;;AAEA,MAAIG,WAAJ,EAAiB;AACf,WAAOA,WAAP;AACD;AACD;;;AAGA;;;AAGA,SAAO,CAAC,GAAGL,SAAS,CAACQ,WAAd,EAA2BN,OAA3B,CAAP;AACD;;AAEDO,MAAM,CAACb,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = getDOMNode;\n\nvar _reactDom = require(\"react-dom\");\n\nfunction getDOMNode(element) {\n  var _element$getHTMLEleme;\n\n  /**\n   * Native HTML elements\n   */\n  if (element === null || element === void 0 ? void 0 : element.nodeType) {\n    return element;\n  }\n  /**\n   * The component provides the `getHTMLElement` method.\n   */\n\n\n  var htmlElement = element === null || element === void 0 ? void 0 : (_element$getHTMLEleme = element.getHTMLElement) === null || _element$getHTMLEleme === void 0 ? void 0 : _element$getHTMLEleme.call(element);\n\n  if (htmlElement) {\n    return htmlElement;\n  }\n  /**\n   * If you can't get the native HTML element, you can only get it through findDOMNode.\n   */\n  // eslint-disable-next-line react/no-find-dom-node\n\n\n  return (0, _reactDom.findDOMNode)(element);\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}