{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['leaflet', 'mapbox-gl'], factory);\n  } else if (typeof exports === 'object') {\n    // Node, CommonJS-like\n    module.exports = factory(require('leaflet'), require('mapbox-gl'));\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory(window.L, window.mapboxgl);\n  }\n})(this, function (L, mapboxgl) {\n  L.MapboxGL = L.Layer.extend({\n    options: {\n      updateInterval: 32,\n      // How much to extend the overlay view (relative to map size)\n      // e.g. 0.1 would be 10% of map view in each direction\n      padding: 0.1,\n      // whether or not to register the mouse and keyboard\n      // events on the mapbox overlay\n      interactive: false\n    },\n    initialize: function (options) {\n      L.setOptions(this, options);\n\n      if (options.accessToken) {\n        mapboxgl.accessToken = options.accessToken;\n      } // setup throttling the update event when panning\n\n\n      this._throttledUpdate = L.Util.throttle(this._update, this.options.updateInterval, this);\n    },\n    onAdd: function (map) {\n      if (!this._container) {\n        this._initContainer();\n      }\n\n      map.getPanes().tilePane.appendChild(this._container);\n\n      this._initGL();\n\n      this._offset = this._map.containerPointToLayerPoint([0, 0]); // work around https://github.com/mapbox/mapbox-gl-leaflet/issues/47\n\n      if (map.options.zoomAnimation) {\n        L.DomEvent.on(map._proxy, L.DomUtil.TRANSITION_END, this._transitionEnd, this);\n      }\n    },\n    onRemove: function (map) {\n      if (this._map._proxy && this._map.options.zoomAnimation) {\n        L.DomEvent.off(this._map._proxy, L.DomUtil.TRANSITION_END, this._transitionEnd, this);\n      }\n\n      map.getPanes().tilePane.removeChild(this._container);\n\n      this._glMap.remove();\n\n      this._glMap = null;\n    },\n    getEvents: function () {\n      return {\n        move: this._throttledUpdate,\n        // sensibly throttle updating while panning\n        zoomanim: this._animateZoom,\n        // applys the zoom animation to the <canvas>\n        zoom: this._pinchZoom,\n        // animate every zoom event for smoother pinch-zooming\n        zoomstart: this._zoomStart,\n        // flag starting a zoom to disable panning\n        zoomend: this._zoomEnd,\n        resize: this._resize\n      };\n    },\n    getMapboxMap: function () {\n      return this._glMap;\n    },\n    getCanvas: function () {\n      return this._glMap.getCanvas();\n    },\n    getSize: function () {\n      return this._map.getSize().multiplyBy(1 + this.options.padding * 2);\n    },\n    getBounds: function () {\n      var halfSize = this.getSize().multiplyBy(0.5);\n\n      var center = this._map.latLngToContainerPoint(this._map.getCenter());\n\n      return L.latLngBounds(this._map.containerPointToLatLng(center.subtract(halfSize)), this._map.containerPointToLatLng(center.add(halfSize)));\n    },\n    getContainer: function () {\n      return this._container;\n    },\n    _initContainer: function () {\n      var container = this._container = L.DomUtil.create('div', 'leaflet-gl-layer');\n      var size = this.getSize();\n\n      var offset = this._map.getSize().multiplyBy(this.options.padding);\n\n      container.style.width = size.x + 'px';\n      container.style.height = size.y + 'px';\n\n      var topLeft = this._map.containerPointToLayerPoint([0, 0]).subtract(offset);\n\n      L.DomUtil.setPosition(container, topLeft);\n    },\n    _initGL: function () {\n      var center = this._map.getCenter();\n\n      var options = L.extend({}, this.options, {\n        container: this._container,\n        center: [center.lng, center.lat],\n        zoom: this._map.getZoom() - 1,\n        attributionControl: false\n      });\n      this._glMap = new mapboxgl.Map(options); // allow GL base map to pan beyond min/max latitudes\n\n      this._glMap.transform.latRange = null;\n\n      if (this._glMap._canvas.canvas) {\n        // older versions of mapbox-gl surfaced the canvas differently\n        this._glMap._actualCanvas = this._glMap._canvas.canvas;\n      } else {\n        this._glMap._actualCanvas = this._glMap._canvas;\n      } // treat child <canvas> element like L.ImageOverlay\n\n\n      var canvas = this._glMap._actualCanvas;\n      L.DomUtil.addClass(canvas, 'leaflet-image-layer');\n      L.DomUtil.addClass(canvas, 'leaflet-zoom-animated');\n\n      if (this.options.interactive) {\n        L.DomUtil.addClass(canvas, 'leaflet-interactive');\n      }\n\n      if (this.options.className) {\n        L.DomUtil.addClass(canvas, this.options.className);\n      }\n    },\n    _update: function (e) {\n      // update the offset so we can correct for it later when we zoom\n      this._offset = this._map.containerPointToLayerPoint([0, 0]);\n\n      if (this._zooming) {\n        return;\n      }\n\n      var size = this.getSize(),\n          container = this._container,\n          gl = this._glMap,\n          offset = this._map.getSize().multiplyBy(this.options.padding),\n          topLeft = this._map.containerPointToLayerPoint([0, 0]).subtract(offset);\n\n      L.DomUtil.setPosition(container, topLeft);\n\n      var center = this._map.getCenter(); // gl.setView([center.lat, center.lng], this._map.getZoom() - 1, 0);\n      // calling setView directly causes sync issues because it uses requestAnimFrame\n\n\n      var tr = gl.transform;\n      tr.center = mapboxgl.LngLat.convert([center.lng, center.lat]);\n      tr.zoom = this._map.getZoom() - 1;\n\n      if (gl.transform.width !== size.x || gl.transform.height !== size.y) {\n        container.style.width = size.x + 'px';\n        container.style.height = size.y + 'px';\n\n        if (gl._resize !== null && gl._resize !== undefined) {\n          gl._resize();\n        } else {\n          gl.resize();\n        }\n      } else {\n        // older versions of mapbox-gl surfaced update publicly\n        if (gl._update !== null && gl._update !== undefined) {\n          gl._update();\n        } else {\n          gl.update();\n        }\n      }\n    },\n    // update the map constantly during a pinch zoom\n    _pinchZoom: function (e) {\n      this._glMap.jumpTo({\n        zoom: this._map.getZoom() - 1,\n        center: this._map.getCenter()\n      });\n    },\n    // borrowed from L.ImageOverlay\n    // https://github.com/Leaflet/Leaflet/blob/master/src/layer/ImageOverlay.js#L139-L144\n    _animateZoom: function (e) {\n      var scale = this._map.getZoomScale(e.zoom);\n\n      var padding = this._map.getSize().multiplyBy(this.options.padding * scale);\n\n      var viewHalf = this.getSize()._divideBy(2); // corrections for padding (scaled), adapted from\n      // https://github.com/Leaflet/Leaflet/blob/master/src/map/Map.js#L1490-L1508\n\n\n      var topLeft = this._map.project(e.center, e.zoom)._subtract(viewHalf)._add(this._map._getMapPanePos().add(padding))._round();\n\n      var offset = this._map.project(this._map.getBounds().getNorthWest(), e.zoom)._subtract(topLeft);\n\n      L.DomUtil.setTransform(this._glMap._actualCanvas, offset.subtract(this._offset), scale);\n    },\n    _zoomStart: function (e) {\n      this._zooming = true;\n    },\n    _zoomEnd: function () {\n      var scale = this._map.getZoomScale(this._map.getZoom()),\n          offset = this._map._latLngToNewLayerPoint(this._map.getBounds().getNorthWest(), this._map.getZoom(), this._map.getCenter());\n\n      L.DomUtil.setTransform(this._glMap._actualCanvas, offset.subtract(this._offset), scale);\n      this._zooming = false;\n\n      this._update();\n    },\n    _transitionEnd: function (e) {\n      L.Util.requestAnimFrame(function () {\n        var zoom = this._map.getZoom();\n\n        var center = this._map.getCenter();\n\n        var offset = this._map.latLngToContainerPoint(this._map.getBounds().getNorthWest()); // reset the scale and offset\n\n\n        L.DomUtil.setTransform(this._glMap._actualCanvas, offset, 1); // enable panning once the gl map is ready again\n\n        this._glMap.once('moveend', L.Util.bind(function () {\n          this._zoomEnd();\n        }, this)); // update the map position\n\n\n        this._glMap.jumpTo({\n          center: center,\n          zoom: zoom - 1\n        });\n      }, this);\n    },\n    _resize: function (e) {\n      this._transitionEnd(e);\n    }\n  });\n\n  L.mapboxGL = function (options) {\n    return new L.MapboxGL(options);\n  };\n});","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/node_modules/mapbox-gl-leaflet/leaflet-mapbox-gl.js"],"names":["root","factory","define","amd","exports","module","require","returnExports","window","L","mapboxgl","MapboxGL","Layer","extend","options","updateInterval","padding","interactive","initialize","setOptions","accessToken","_throttledUpdate","Util","throttle","_update","onAdd","map","_container","_initContainer","getPanes","tilePane","appendChild","_initGL","_offset","_map","containerPointToLayerPoint","zoomAnimation","DomEvent","on","_proxy","DomUtil","TRANSITION_END","_transitionEnd","onRemove","off","removeChild","_glMap","remove","getEvents","move","zoomanim","_animateZoom","zoom","_pinchZoom","zoomstart","_zoomStart","zoomend","_zoomEnd","resize","_resize","getMapboxMap","getCanvas","getSize","multiplyBy","getBounds","halfSize","center","latLngToContainerPoint","getCenter","latLngBounds","containerPointToLatLng","subtract","add","getContainer","container","create","size","offset","style","width","x","height","y","topLeft","setPosition","lng","lat","getZoom","attributionControl","Map","transform","latRange","_canvas","canvas","_actualCanvas","addClass","className","e","_zooming","gl","tr","LngLat","convert","undefined","update","jumpTo","scale","getZoomScale","viewHalf","_divideBy","project","_subtract","_add","_getMapPanePos","_round","getNorthWest","setTransform","_latLngToNewLayerPoint","requestAnimFrame","once","bind","mapboxGL"],"mappings":"AAAC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AACtB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5C;AACAD,IAAAA,MAAM,CAAC,CAAC,SAAD,EAAY,WAAZ,CAAD,EAA2BD,OAA3B,CAAN;AACH,GAHD,MAGO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AACpC;AACAC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,CAACK,OAAO,CAAC,SAAD,CAAR,EAAqBA,OAAO,CAAC,WAAD,CAA5B,CAAxB;AACH,GAHM,MAGA;AACH;AACAN,IAAAA,IAAI,CAACO,aAAL,GAAqBN,OAAO,CAACO,MAAM,CAACC,CAAR,EAAWD,MAAM,CAACE,QAAlB,CAA5B;AACH;AACJ,CAXA,EAWC,IAXD,EAWO,UAAUD,CAAV,EAAaC,QAAb,EAAuB;AAC3BD,EAAAA,CAAC,CAACE,QAAF,GAAaF,CAAC,CAACG,KAAF,CAAQC,MAAR,CAAe;AACpBC,IAAAA,OAAO,EAAE;AACTC,MAAAA,cAAc,EAAE,EADP;AAET;AACA;AACAC,MAAAA,OAAO,EAAE,GAJA;AAKT;AACA;AACAC,MAAAA,WAAW,EAAE;AAPJ,KADW;AAWxBC,IAAAA,UAAU,EAAE,UAAUJ,OAAV,EAAmB;AAC3BL,MAAAA,CAAC,CAACU,UAAF,CAAa,IAAb,EAAmBL,OAAnB;;AAEA,UAAIA,OAAO,CAACM,WAAZ,EAAyB;AACrBV,QAAAA,QAAQ,CAACU,WAAT,GAAuBN,OAAO,CAACM,WAA/B;AACH,OAL0B,CAO3B;;;AACA,WAAKC,gBAAL,GAAwBZ,CAAC,CAACa,IAAF,CAAOC,QAAP,CAAgB,KAAKC,OAArB,EAA8B,KAAKV,OAAL,CAAaC,cAA3C,EAA2D,IAA3D,CAAxB;AACH,KApBuB;AAsBxBU,IAAAA,KAAK,EAAE,UAAUC,GAAV,EAAe;AAClB,UAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,aAAKC,cAAL;AACH;;AAEDF,MAAAA,GAAG,CAACG,QAAJ,GAAeC,QAAf,CAAwBC,WAAxB,CAAoC,KAAKJ,UAAzC;;AAEA,WAAKK,OAAL;;AAEA,WAAKC,OAAL,GAAe,KAAKC,IAAL,CAAUC,0BAAV,CAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,CAAf,CATkB,CAWlB;;AACA,UAAIT,GAAG,CAACZ,OAAJ,CAAYsB,aAAhB,EAA+B;AAC3B3B,QAAAA,CAAC,CAAC4B,QAAF,CAAWC,EAAX,CAAcZ,GAAG,CAACa,MAAlB,EAA0B9B,CAAC,CAAC+B,OAAF,CAAUC,cAApC,EAAoD,KAAKC,cAAzD,EAAyE,IAAzE;AACH;AACJ,KArCuB;AAuCxBC,IAAAA,QAAQ,EAAE,UAAUjB,GAAV,EAAe;AACrB,UAAI,KAAKQ,IAAL,CAAUK,MAAV,IAAoB,KAAKL,IAAL,CAAUpB,OAAV,CAAkBsB,aAA1C,EAAyD;AACrD3B,QAAAA,CAAC,CAAC4B,QAAF,CAAWO,GAAX,CAAe,KAAKV,IAAL,CAAUK,MAAzB,EAAiC9B,CAAC,CAAC+B,OAAF,CAAUC,cAA3C,EAA2D,KAAKC,cAAhE,EAAgF,IAAhF;AACH;;AAEDhB,MAAAA,GAAG,CAACG,QAAJ,GAAeC,QAAf,CAAwBe,WAAxB,CAAoC,KAAKlB,UAAzC;;AACA,WAAKmB,MAAL,CAAYC,MAAZ;;AACA,WAAKD,MAAL,GAAc,IAAd;AACH,KA/CuB;AAiDxBE,IAAAA,SAAS,EAAE,YAAY;AACnB,aAAO;AACHC,QAAAA,IAAI,EAAE,KAAK5B,gBADR;AAC0B;AAC7B6B,QAAAA,QAAQ,EAAE,KAAKC,YAFZ;AAE0B;AAC7BC,QAAAA,IAAI,EAAE,KAAKC,UAHR;AAGoB;AACvBC,QAAAA,SAAS,EAAE,KAAKC,UAJb;AAIyB;AAC5BC,QAAAA,OAAO,EAAE,KAAKC,QALX;AAMHC,QAAAA,MAAM,EAAE,KAAKC;AANV,OAAP;AAQH,KA1DuB;AA4DxBC,IAAAA,YAAY,EAAE,YAAY;AACtB,aAAO,KAAKd,MAAZ;AACH,KA9DuB;AAgExBe,IAAAA,SAAS,EAAE,YAAY;AACnB,aAAO,KAAKf,MAAL,CAAYe,SAAZ,EAAP;AACH,KAlEuB;AAoExBC,IAAAA,OAAO,EAAE,YAAY;AACjB,aAAO,KAAK5B,IAAL,CAAU4B,OAAV,GAAoBC,UAApB,CAA+B,IAAI,KAAKjD,OAAL,CAAaE,OAAb,GAAuB,CAA1D,CAAP;AACH,KAtEuB;AAwExBgD,IAAAA,SAAS,EAAE,YAAY;AACnB,UAAIC,QAAQ,GAAG,KAAKH,OAAL,GAAeC,UAAf,CAA0B,GAA1B,CAAf;;AACA,UAAIG,MAAM,GAAG,KAAKhC,IAAL,CAAUiC,sBAAV,CAAiC,KAAKjC,IAAL,CAAUkC,SAAV,EAAjC,CAAb;;AACA,aAAO3D,CAAC,CAAC4D,YAAF,CACH,KAAKnC,IAAL,CAAUoC,sBAAV,CAAiCJ,MAAM,CAACK,QAAP,CAAgBN,QAAhB,CAAjC,CADG,EAEH,KAAK/B,IAAL,CAAUoC,sBAAV,CAAiCJ,MAAM,CAACM,GAAP,CAAWP,QAAX,CAAjC,CAFG,CAAP;AAIH,KA/EuB;AAiFxBQ,IAAAA,YAAY,EAAE,YAAY;AACtB,aAAO,KAAK9C,UAAZ;AACH,KAnFuB;AAqFxBC,IAAAA,cAAc,EAAE,YAAY;AACxB,UAAI8C,SAAS,GAAG,KAAK/C,UAAL,GAAkBlB,CAAC,CAAC+B,OAAF,CAAUmC,MAAV,CAAiB,KAAjB,EAAwB,kBAAxB,CAAlC;AAEA,UAAIC,IAAI,GAAG,KAAKd,OAAL,EAAX;;AACA,UAAIe,MAAM,GAAG,KAAK3C,IAAL,CAAU4B,OAAV,GAAoBC,UAApB,CAA+B,KAAKjD,OAAL,CAAaE,OAA5C,CAAb;;AACA0D,MAAAA,SAAS,CAACI,KAAV,CAAgBC,KAAhB,GAAyBH,IAAI,CAACI,CAAL,GAAS,IAAlC;AACAN,MAAAA,SAAS,CAACI,KAAV,CAAgBG,MAAhB,GAAyBL,IAAI,CAACM,CAAL,GAAS,IAAlC;;AAEA,UAAIC,OAAO,GAAG,KAAKjD,IAAL,CAAUC,0BAAV,CAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,EAA6CoC,QAA7C,CAAsDM,MAAtD,CAAd;;AAEApE,MAAAA,CAAC,CAAC+B,OAAF,CAAU4C,WAAV,CAAsBV,SAAtB,EAAiCS,OAAjC;AACH,KAhGuB;AAkGxBnD,IAAAA,OAAO,EAAE,YAAY;AACjB,UAAIkC,MAAM,GAAG,KAAKhC,IAAL,CAAUkC,SAAV,EAAb;;AAEA,UAAItD,OAAO,GAAGL,CAAC,CAACI,MAAF,CAAS,EAAT,EAAa,KAAKC,OAAlB,EAA2B;AACrC4D,QAAAA,SAAS,EAAE,KAAK/C,UADqB;AAErCuC,QAAAA,MAAM,EAAE,CAACA,MAAM,CAACmB,GAAR,EAAanB,MAAM,CAACoB,GAApB,CAF6B;AAGrClC,QAAAA,IAAI,EAAE,KAAKlB,IAAL,CAAUqD,OAAV,KAAsB,CAHS;AAIrCC,QAAAA,kBAAkB,EAAE;AAJiB,OAA3B,CAAd;AAOA,WAAK1C,MAAL,GAAc,IAAIpC,QAAQ,CAAC+E,GAAb,CAAiB3E,OAAjB,CAAd,CAViB,CAYjB;;AACA,WAAKgC,MAAL,CAAY4C,SAAZ,CAAsBC,QAAtB,GAAiC,IAAjC;;AAEA,UAAI,KAAK7C,MAAL,CAAY8C,OAAZ,CAAoBC,MAAxB,EAAgC;AAC5B;AACA,aAAK/C,MAAL,CAAYgD,aAAZ,GAA4B,KAAKhD,MAAL,CAAY8C,OAAZ,CAAoBC,MAAhD;AACH,OAHD,MAGO;AACH,aAAK/C,MAAL,CAAYgD,aAAZ,GAA4B,KAAKhD,MAAL,CAAY8C,OAAxC;AACH,OApBgB,CAsBjB;;;AACA,UAAIC,MAAM,GAAG,KAAK/C,MAAL,CAAYgD,aAAzB;AACArF,MAAAA,CAAC,CAAC+B,OAAF,CAAUuD,QAAV,CAAmBF,MAAnB,EAA2B,qBAA3B;AACApF,MAAAA,CAAC,CAAC+B,OAAF,CAAUuD,QAAV,CAAmBF,MAAnB,EAA2B,uBAA3B;;AACA,UAAI,KAAK/E,OAAL,CAAaG,WAAjB,EAA8B;AAC1BR,QAAAA,CAAC,CAAC+B,OAAF,CAAUuD,QAAV,CAAmBF,MAAnB,EAA2B,qBAA3B;AACH;;AACD,UAAI,KAAK/E,OAAL,CAAakF,SAAjB,EAA4B;AACxBvF,QAAAA,CAAC,CAAC+B,OAAF,CAAUuD,QAAV,CAAmBF,MAAnB,EAA2B,KAAK/E,OAAL,CAAakF,SAAxC;AACH;AACJ,KAlIuB;AAoIxBxE,IAAAA,OAAO,EAAE,UAAUyE,CAAV,EAAa;AAClB;AACA,WAAKhE,OAAL,GAAe,KAAKC,IAAL,CAAUC,0BAAV,CAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,CAAf;;AAEA,UAAI,KAAK+D,QAAT,EAAmB;AACf;AACH;;AAED,UAAItB,IAAI,GAAG,KAAKd,OAAL,EAAX;AAAA,UACIY,SAAS,GAAG,KAAK/C,UADrB;AAAA,UAEIwE,EAAE,GAAG,KAAKrD,MAFd;AAAA,UAGI+B,MAAM,GAAG,KAAK3C,IAAL,CAAU4B,OAAV,GAAoBC,UAApB,CAA+B,KAAKjD,OAAL,CAAaE,OAA5C,CAHb;AAAA,UAIImE,OAAO,GAAG,KAAKjD,IAAL,CAAUC,0BAAV,CAAqC,CAAC,CAAD,EAAI,CAAJ,CAArC,EAA6CoC,QAA7C,CAAsDM,MAAtD,CAJd;;AAMApE,MAAAA,CAAC,CAAC+B,OAAF,CAAU4C,WAAV,CAAsBV,SAAtB,EAAiCS,OAAjC;;AAEA,UAAIjB,MAAM,GAAG,KAAKhC,IAAL,CAAUkC,SAAV,EAAb,CAhBkB,CAkBlB;AACA;;;AAEA,UAAIgC,EAAE,GAAGD,EAAE,CAACT,SAAZ;AACAU,MAAAA,EAAE,CAAClC,MAAH,GAAYxD,QAAQ,CAAC2F,MAAT,CAAgBC,OAAhB,CAAwB,CAACpC,MAAM,CAACmB,GAAR,EAAanB,MAAM,CAACoB,GAApB,CAAxB,CAAZ;AACAc,MAAAA,EAAE,CAAChD,IAAH,GAAU,KAAKlB,IAAL,CAAUqD,OAAV,KAAsB,CAAhC;;AAEA,UAAIY,EAAE,CAACT,SAAH,CAAaX,KAAb,KAAuBH,IAAI,CAACI,CAA5B,IAAiCmB,EAAE,CAACT,SAAH,CAAaT,MAAb,KAAwBL,IAAI,CAACM,CAAlE,EAAqE;AACjER,QAAAA,SAAS,CAACI,KAAV,CAAgBC,KAAhB,GAAyBH,IAAI,CAACI,CAAL,GAAS,IAAlC;AACAN,QAAAA,SAAS,CAACI,KAAV,CAAgBG,MAAhB,GAAyBL,IAAI,CAACM,CAAL,GAAS,IAAlC;;AACA,YAAIiB,EAAE,CAACxC,OAAH,KAAe,IAAf,IAAuBwC,EAAE,CAACxC,OAAH,KAAe4C,SAA1C,EAAoD;AAChDJ,UAAAA,EAAE,CAACxC,OAAH;AACH,SAFD,MAEO;AACHwC,UAAAA,EAAE,CAACzC,MAAH;AACH;AACJ,OARD,MAQO;AACH;AACA,YAAIyC,EAAE,CAAC3E,OAAH,KAAe,IAAf,IAAuB2E,EAAE,CAAC3E,OAAH,KAAe+E,SAA1C,EAAoD;AAChDJ,UAAAA,EAAE,CAAC3E,OAAH;AACH,SAFD,MAEO;AACH2E,UAAAA,EAAE,CAACK,MAAH;AACH;AACJ;AACJ,KA7KuB;AA+KxB;AACAnD,IAAAA,UAAU,EAAE,UAAU4C,CAAV,EAAa;AACrB,WAAKnD,MAAL,CAAY2D,MAAZ,CAAmB;AACfrD,QAAAA,IAAI,EAAE,KAAKlB,IAAL,CAAUqD,OAAV,KAAsB,CADb;AAEfrB,QAAAA,MAAM,EAAE,KAAKhC,IAAL,CAAUkC,SAAV;AAFO,OAAnB;AAIH,KArLuB;AAuLxB;AACA;AACAjB,IAAAA,YAAY,EAAE,UAAU8C,CAAV,EAAa;AACvB,UAAIS,KAAK,GAAG,KAAKxE,IAAL,CAAUyE,YAAV,CAAuBV,CAAC,CAAC7C,IAAzB,CAAZ;;AACA,UAAIpC,OAAO,GAAG,KAAKkB,IAAL,CAAU4B,OAAV,GAAoBC,UAApB,CAA+B,KAAKjD,OAAL,CAAaE,OAAb,GAAuB0F,KAAtD,CAAd;;AACA,UAAIE,QAAQ,GAAG,KAAK9C,OAAL,GAAe+C,SAAf,CAAyB,CAAzB,CAAf,CAHuB,CAIvB;AACA;;;AACA,UAAI1B,OAAO,GAAG,KAAKjD,IAAL,CAAU4E,OAAV,CAAkBb,CAAC,CAAC/B,MAApB,EAA4B+B,CAAC,CAAC7C,IAA9B,EACT2D,SADS,CACCH,QADD,EAETI,IAFS,CAEJ,KAAK9E,IAAL,CAAU+E,cAAV,GACLzC,GADK,CACDxD,OADC,CAFI,EAGKkG,MAHL,EAAd;;AAIA,UAAIrC,MAAM,GAAG,KAAK3C,IAAL,CAAU4E,OAAV,CAAkB,KAAK5E,IAAL,CAAU8B,SAAV,GAAsBmD,YAAtB,EAAlB,EAAwDlB,CAAC,CAAC7C,IAA1D,EACR2D,SADQ,CACE5B,OADF,CAAb;;AAGA1E,MAAAA,CAAC,CAAC+B,OAAF,CAAU4E,YAAV,CACI,KAAKtE,MAAL,CAAYgD,aADhB,EAEIjB,MAAM,CAACN,QAAP,CAAgB,KAAKtC,OAArB,CAFJ,EAGIyE,KAHJ;AAKH,KA3MuB;AA6MxBnD,IAAAA,UAAU,EAAE,UAAU0C,CAAV,EAAa;AACrB,WAAKC,QAAL,GAAgB,IAAhB;AACH,KA/MuB;AAiNxBzC,IAAAA,QAAQ,EAAE,YAAY;AAClB,UAAIiD,KAAK,GAAG,KAAKxE,IAAL,CAAUyE,YAAV,CAAuB,KAAKzE,IAAL,CAAUqD,OAAV,EAAvB,CAAZ;AAAA,UACIV,MAAM,GAAG,KAAK3C,IAAL,CAAUmF,sBAAV,CACL,KAAKnF,IAAL,CAAU8B,SAAV,GAAsBmD,YAAtB,EADK,EAEL,KAAKjF,IAAL,CAAUqD,OAAV,EAFK,EAGL,KAAKrD,IAAL,CAAUkC,SAAV,EAHK,CADb;;AAOA3D,MAAAA,CAAC,CAAC+B,OAAF,CAAU4E,YAAV,CACI,KAAKtE,MAAL,CAAYgD,aADhB,EAEIjB,MAAM,CAACN,QAAP,CAAgB,KAAKtC,OAArB,CAFJ,EAGIyE,KAHJ;AAMA,WAAKR,QAAL,GAAgB,KAAhB;;AAEA,WAAK1E,OAAL;AACH,KAlOuB;AAoOxBkB,IAAAA,cAAc,EAAE,UAAUuD,CAAV,EAAa;AACzBxF,MAAAA,CAAC,CAACa,IAAF,CAAOgG,gBAAP,CAAwB,YAAY;AAChC,YAAIlE,IAAI,GAAG,KAAKlB,IAAL,CAAUqD,OAAV,EAAX;;AACA,YAAIrB,MAAM,GAAG,KAAKhC,IAAL,CAAUkC,SAAV,EAAb;;AACA,YAAIS,MAAM,GAAG,KAAK3C,IAAL,CAAUiC,sBAAV,CACT,KAAKjC,IAAL,CAAU8B,SAAV,GAAsBmD,YAAtB,EADS,CAAb,CAHgC,CAOhC;;;AACA1G,QAAAA,CAAC,CAAC+B,OAAF,CAAU4E,YAAV,CAAuB,KAAKtE,MAAL,CAAYgD,aAAnC,EAAkDjB,MAAlD,EAA0D,CAA1D,EARgC,CAUhC;;AACA,aAAK/B,MAAL,CAAYyE,IAAZ,CAAiB,SAAjB,EAA4B9G,CAAC,CAACa,IAAF,CAAOkG,IAAP,CAAY,YAAY;AAChD,eAAK/D,QAAL;AACH,SAF2B,EAEzB,IAFyB,CAA5B,EAXgC,CAehC;;;AACA,aAAKX,MAAL,CAAY2D,MAAZ,CAAmB;AACfvC,UAAAA,MAAM,EAAEA,MADO;AAEfd,UAAAA,IAAI,EAAEA,IAAI,GAAG;AAFE,SAAnB;AAIH,OApBD,EAoBG,IApBH;AAqBH,KA1PuB;AA4PxBO,IAAAA,OAAO,EAAE,UAAUsC,CAAV,EAAa;AAClB,WAAKvD,cAAL,CAAoBuD,CAApB;AACH;AA9PuB,GAAf,CAAb;;AAiQAxF,EAAAA,CAAC,CAACgH,QAAF,GAAa,UAAU3G,OAAV,EAAmB;AAC5B,WAAO,IAAIL,CAAC,CAACE,QAAN,CAAeG,OAAf,CAAP;AACH,GAFD;AAIH,CAjRA,CAAD","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['leaflet', 'mapbox-gl'], factory);\n    } else if (typeof exports === 'object') {\n        // Node, CommonJS-like\n        module.exports = factory(require('leaflet'), require('mapbox-gl'));\n    } else {\n        // Browser globals (root is window)\n        root.returnExports = factory(window.L, window.mapboxgl);\n    }\n}(this, function (L, mapboxgl) {\n    L.MapboxGL = L.Layer.extend({\n            options: {\n            updateInterval: 32,\n            // How much to extend the overlay view (relative to map size)\n            // e.g. 0.1 would be 10% of map view in each direction\n            padding: 0.1,\n            // whether or not to register the mouse and keyboard\n            // events on the mapbox overlay\n            interactive: false\n        },\n\n        initialize: function (options) {\n            L.setOptions(this, options);\n\n            if (options.accessToken) {\n                mapboxgl.accessToken = options.accessToken;\n            }\n\n            // setup throttling the update event when panning\n            this._throttledUpdate = L.Util.throttle(this._update, this.options.updateInterval, this);\n        },\n\n        onAdd: function (map) {\n            if (!this._container) {\n                this._initContainer();\n            }\n\n            map.getPanes().tilePane.appendChild(this._container);\n\n            this._initGL();\n\n            this._offset = this._map.containerPointToLayerPoint([0, 0]);\n\n            // work around https://github.com/mapbox/mapbox-gl-leaflet/issues/47\n            if (map.options.zoomAnimation) {\n                L.DomEvent.on(map._proxy, L.DomUtil.TRANSITION_END, this._transitionEnd, this);\n            }\n        },\n\n        onRemove: function (map) {\n            if (this._map._proxy && this._map.options.zoomAnimation) {\n                L.DomEvent.off(this._map._proxy, L.DomUtil.TRANSITION_END, this._transitionEnd, this);\n            }\n\n            map.getPanes().tilePane.removeChild(this._container);\n            this._glMap.remove();\n            this._glMap = null;\n        },\n\n        getEvents: function () {\n            return {\n                move: this._throttledUpdate, // sensibly throttle updating while panning\n                zoomanim: this._animateZoom, // applys the zoom animation to the <canvas>\n                zoom: this._pinchZoom, // animate every zoom event for smoother pinch-zooming\n                zoomstart: this._zoomStart, // flag starting a zoom to disable panning\n                zoomend: this._zoomEnd,\n                resize: this._resize\n            };\n        },\n\n        getMapboxMap: function () {\n            return this._glMap;\n        },\n\n        getCanvas: function () {\n            return this._glMap.getCanvas();\n        },\n\n        getSize: function () {\n            return this._map.getSize().multiplyBy(1 + this.options.padding * 2);\n        },\n\n        getBounds: function () {\n            var halfSize = this.getSize().multiplyBy(0.5);\n            var center = this._map.latLngToContainerPoint(this._map.getCenter());\n            return L.latLngBounds(\n                this._map.containerPointToLatLng(center.subtract(halfSize)),\n                this._map.containerPointToLatLng(center.add(halfSize))\n            );\n        },\n\n        getContainer: function () {\n            return this._container;\n        },\n\n        _initContainer: function () {\n            var container = this._container = L.DomUtil.create('div', 'leaflet-gl-layer');\n\n            var size = this.getSize();\n            var offset = this._map.getSize().multiplyBy(this.options.padding);\n            container.style.width  = size.x + 'px';\n            container.style.height = size.y + 'px';\n\n            var topLeft = this._map.containerPointToLayerPoint([0, 0]).subtract(offset);\n\n            L.DomUtil.setPosition(container, topLeft);\n        },\n\n        _initGL: function () {\n            var center = this._map.getCenter();\n\n            var options = L.extend({}, this.options, {\n                container: this._container,\n                center: [center.lng, center.lat],\n                zoom: this._map.getZoom() - 1,\n                attributionControl: false\n            });\n\n            this._glMap = new mapboxgl.Map(options);\n\n            // allow GL base map to pan beyond min/max latitudes\n            this._glMap.transform.latRange = null;\n\n            if (this._glMap._canvas.canvas) {\n                // older versions of mapbox-gl surfaced the canvas differently\n                this._glMap._actualCanvas = this._glMap._canvas.canvas;\n            } else {\n                this._glMap._actualCanvas = this._glMap._canvas;\n            }\n\n            // treat child <canvas> element like L.ImageOverlay\n            var canvas = this._glMap._actualCanvas;\n            L.DomUtil.addClass(canvas, 'leaflet-image-layer');\n            L.DomUtil.addClass(canvas, 'leaflet-zoom-animated');\n            if (this.options.interactive) {\n                L.DomUtil.addClass(canvas, 'leaflet-interactive');\n            }\n            if (this.options.className) {\n                L.DomUtil.addClass(canvas, this.options.className);\n            }\n        },\n\n        _update: function (e) {\n            // update the offset so we can correct for it later when we zoom\n            this._offset = this._map.containerPointToLayerPoint([0, 0]);\n\n            if (this._zooming) {\n                return;\n            }\n\n            var size = this.getSize(),\n                container = this._container,\n                gl = this._glMap,\n                offset = this._map.getSize().multiplyBy(this.options.padding),\n                topLeft = this._map.containerPointToLayerPoint([0, 0]).subtract(offset);\n\n            L.DomUtil.setPosition(container, topLeft);\n\n            var center = this._map.getCenter();\n\n            // gl.setView([center.lat, center.lng], this._map.getZoom() - 1, 0);\n            // calling setView directly causes sync issues because it uses requestAnimFrame\n\n            var tr = gl.transform;\n            tr.center = mapboxgl.LngLat.convert([center.lng, center.lat]);\n            tr.zoom = this._map.getZoom() - 1;\n\n            if (gl.transform.width !== size.x || gl.transform.height !== size.y) {\n                container.style.width  = size.x + 'px';\n                container.style.height = size.y + 'px';\n                if (gl._resize !== null && gl._resize !== undefined){\n                    gl._resize();\n                } else {\n                    gl.resize();\n                }\n            } else {\n                // older versions of mapbox-gl surfaced update publicly\n                if (gl._update !== null && gl._update !== undefined){\n                    gl._update();\n                } else {\n                    gl.update();\n                }\n            }\n        },\n\n        // update the map constantly during a pinch zoom\n        _pinchZoom: function (e) {\n            this._glMap.jumpTo({\n                zoom: this._map.getZoom() - 1,\n                center: this._map.getCenter()\n            });\n        },\n\n        // borrowed from L.ImageOverlay\n        // https://github.com/Leaflet/Leaflet/blob/master/src/layer/ImageOverlay.js#L139-L144\n        _animateZoom: function (e) {\n            var scale = this._map.getZoomScale(e.zoom);\n            var padding = this._map.getSize().multiplyBy(this.options.padding * scale);\n            var viewHalf = this.getSize()._divideBy(2);\n            // corrections for padding (scaled), adapted from\n            // https://github.com/Leaflet/Leaflet/blob/master/src/map/Map.js#L1490-L1508\n            var topLeft = this._map.project(e.center, e.zoom)\n                ._subtract(viewHalf)\n                ._add(this._map._getMapPanePos()\n                .add(padding))._round();\n            var offset = this._map.project(this._map.getBounds().getNorthWest(), e.zoom)\n                ._subtract(topLeft);\n\n            L.DomUtil.setTransform(\n                this._glMap._actualCanvas,\n                offset.subtract(this._offset),\n                scale\n            );\n        },\n\n        _zoomStart: function (e) {\n            this._zooming = true;\n        },\n\n        _zoomEnd: function () {\n            var scale = this._map.getZoomScale(this._map.getZoom()),\n                offset = this._map._latLngToNewLayerPoint(\n                    this._map.getBounds().getNorthWest(),\n                    this._map.getZoom(),\n                    this._map.getCenter()\n                );\n\n            L.DomUtil.setTransform(\n                this._glMap._actualCanvas,\n                offset.subtract(this._offset),\n                scale\n            );\n\n            this._zooming = false;\n\n            this._update();\n        },\n\n        _transitionEnd: function (e) {\n            L.Util.requestAnimFrame(function () {\n                var zoom = this._map.getZoom();\n                var center = this._map.getCenter();\n                var offset = this._map.latLngToContainerPoint(\n                    this._map.getBounds().getNorthWest()\n                );\n\n                // reset the scale and offset\n                L.DomUtil.setTransform(this._glMap._actualCanvas, offset, 1);\n\n                // enable panning once the gl map is ready again\n                this._glMap.once('moveend', L.Util.bind(function () {\n                    this._zoomEnd();\n                }, this));\n\n                // update the map position\n                this._glMap.jumpTo({\n                    center: center,\n                    zoom: zoom - 1\n                });\n            }, this);\n        },\n\n        _resize: function (e) {\n            this._transitionEnd(e);\n        }\n    });\n\n    L.mapboxGL = function (options) {\n        return new L.MapboxGL(options);\n    };\n\n}));\n\n"]},"metadata":{},"sourceType":"script"}