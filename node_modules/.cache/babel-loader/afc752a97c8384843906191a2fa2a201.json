{"ast":null,"code":"var _jsxFileName = \"E:\\\\Hammad\\\\FrontEnd\\\\ClientApp\\\\src\\\\components\\\\JourneyTable\\\\JourneyTable.js\";\nimport React from \"react\";\nimport \"../GynTable/gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { CSVLink } from \"react-csv\";\nimport Moment from \"react-moment\";\nimport env from \"../../evn\"; // whiteSpace: \"nowrap\", overflow: 'scroll'\n\nconst baseColStyle = {\n  textAlign: \"center\",\n  padding: \"1%\",\n  fontSize: \"0.7rem\"\n};\nconst BASE_URL = env.baseUrl + \"/exposure/details\";\nconst isProd = env.isProd; // Headers for csv file\n\nconst headers = [// { label: \"PINDEX\", key: \"PINDEX\" },\n// { label: \"PROINDEX\", key: \"PROINDEX\" },\n{\n  label: \"Patient MRN\",\n  key: \"PatientMRN\"\n}, {\n  label: \"Provider MRN\",\n  key: \"ProviderMRN\"\n}, {\n  label: \"Provider First Name\",\n  key: \"ProviderFirstName\"\n}, {\n  label: \"Provider Last Name\",\n  key: \"ProviderLastName\"\n}, {\n  label: \"First Seen\",\n  key: \"FirstSeen\"\n}, {\n  label: \"Result Date\",\n  key: \"ResultDate\"\n}, {\n  label: \"Result Status\",\n  key: \"ResultStatus\"\n}, {\n  label: \"Patient Count\",\n  key: \"pPatientCount\"\n}, {\n  label: \"Provider Count\",\n  key: \"pProviderCount\"\n}, {\n  label: \"Patient Risk Level\",\n  key: \"PatientRiskLevel\"\n}, {\n  label: \"Provider Risk Level\",\n  key: \"ProviderRiskLevel\"\n}];\n\nclass JourneyTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      currSelected: null,\n      filters: {\n        resultStatus: null\n      }\n    };\n  } // LIFECYCLES\n\n\n  componentWillMount() {}\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  componentDidUpdate(prevProps) {\n    // if selectedItem change\n    if (prevProps.selectedItem !== this.props.selectedItem) {\n      this.setState({\n        currSelected: this.props.selectedItem\n      });\n    } // if data change\n\n\n    if (prevProps.data !== this.props.data && this.props.data.length > 0) {\n      this.props.data.sort((a, b) => new Date(a.FirstSeen).getTime() - new Date(b.FirstSeen).getTime());\n      this.setState({\n        data: this.props.data\n      });\n    }\n  } // TEMPLATES\n\n\n  statusBodyTemplate(rowData) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData.ResultStatus ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `status-${rowData.ResultStatus ? rowData.ResultStatus.toLowerCase() : rowData.ResultStatus}  status-label`,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, rowData.ResultStatus) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Not Available\"));\n  }\n\n  datesBodyTemplate(rowData, key) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData[key] ? /*#__PURE__*/React.createElement(Moment, {\n      format: \"YYYY/MM/DD - HH:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, rowData[key]) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"No test result\"));\n  }\n\n  riskLevelBodyTemplate(rowData, key) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData[key] ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `level-${rowData[key]} status-label`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, rowData[key]) : null);\n  } // FILTERS\n\n\n  renderResultStatusFilter() {\n    const options = [{\n      label: \"Pending\",\n      value: \"pending\"\n    }, {\n      label: \"Positive\",\n      value: \"positive\"\n    }, {\n      label: \"Negative\",\n      value: \"negative\"\n    }];\n\n    const onChange = event => {\n      this.dt.filter(event.value, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          resultStatus: event.value\n        }\n      });\n    };\n\n    const onClear = event => {\n      this.dt.filter(null, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters,\n          resultStatus: null\n        }\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.filters.resultStatus,\n      options: options,\n      onChange: onChange,\n      placeholder: \"Results Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), this.state.filters.resultStatus && /*#__PURE__*/React.createElement(\"i\", {\n      onClick: onClear,\n      className: \"pi pi-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gyn-table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Exposure Journey & Risk Analysis - Epidemiological Investigation\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"export\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      data: this.state.data,\n      headers: headers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, \"Export to CSV\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      ref: el => this.dt = el,\n      value: this.state.data,\n      selectionMode: \"single\",\n      paginator: true,\n      rows: 5,\n      emptyMessage: \"No Results found\",\n      currentPageReportTemplate: \"Showing {first} to {last} of {totalRecords} items\",\n      paginatorTemplate: \"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\",\n      rowsPerPageOptions: [5, 10, 25, 50],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientMRN\",\n      header: \"Patient's MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderMRN\",\n      header: \"Provider's MRN\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderFirstName\",\n      header: \"Provider's First Name\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderLastName\",\n      header: \"Provider's Surname\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"FirstSeen\",\n      header: \"First Seen\",\n      sortable: true,\n      style: baseColStyle,\n      body: data => this.datesBodyTemplate(data, \"FirstSeen\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ResultDate\",\n      header: \"Result Date\",\n      sortable: true,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      body: data => this.datesBodyTemplate(data, \"ResultDate\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ResultStatus\",\n      header: \"Result Status\",\n      sortable: true,\n      body: this.statusBodyTemplate,\n      style: { ...baseColStyle,\n        overflow: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"pPatientCount\",\n      header: \"Cumulative Indirect Exposure\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"PatientRiskLevel\",\n      header: \"Patient Risk Level\",\n      body: row => this.riskLevelBodyTemplate(row, \"PatientRiskLevel\"),\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"pProviderCount\",\n      header: \"Cumulative Exposures to Positive Patients\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"ProviderRiskLevel\",\n      header: \"Provider Risk Level\",\n      body: row => this.riskLevelBodyTemplate(row, \"ProviderRiskLevel\"),\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      field: \"Department\",\n      header: \"Department\",\n      sortable: true,\n      style: baseColStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default JourneyTable;","map":{"version":3,"sources":["E:/Hammad/FrontEnd/ClientApp/src/components/JourneyTable/JourneyTable.js"],"names":["React","DataTable","Column","Dropdown","CSVLink","Moment","env","baseColStyle","textAlign","padding","fontSize","BASE_URL","baseUrl","isProd","headers","label","key","JourneyTable","Component","constructor","props","state","data","currSelected","filters","resultStatus","componentWillMount","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","selectedItem","setState","length","sort","a","b","Date","FirstSeen","getTime","statusBodyTemplate","rowData","ResultStatus","toLowerCase","datesBodyTemplate","riskLevelBodyTemplate","renderResultStatusFilter","options","value","onChange","event","dt","filter","onClear","display","alignItems","render","el","overflow","row"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../GynTable/gyn.style.scss\";\nimport { DataTable } from \"primereact/datatable\";\nimport { Column } from \"primereact/column\";\nimport { Dropdown } from \"primereact/dropdown\";\nimport { CSVLink } from \"react-csv\";\nimport Moment from \"react-moment\";\nimport env from \"../../evn\";\n\n// whiteSpace: \"nowrap\", overflow: 'scroll'\nconst baseColStyle = { textAlign: \"center\", padding: \"1%\", fontSize: \"0.7rem\" };\nconst BASE_URL = env.baseUrl + \"/exposure/details\";\nconst isProd = env.isProd;\n\n// Headers for csv file\nconst headers = [\n  // { label: \"PINDEX\", key: \"PINDEX\" },\n  // { label: \"PROINDEX\", key: \"PROINDEX\" },\n  { label: \"Patient MRN\", key: \"PatientMRN\" },\n  { label: \"Provider MRN\", key: \"ProviderMRN\" },\n  { label: \"Provider First Name\", key: \"ProviderFirstName\" },\n  { label: \"Provider Last Name\", key: \"ProviderLastName\" },\n  { label: \"First Seen\", key: \"FirstSeen\" },\n  { label: \"Result Date\", key: \"ResultDate\" },\n  { label: \"Result Status\", key: \"ResultStatus\" },\n  { label: \"Patient Count\", key: \"pPatientCount\" },\n  { label: \"Provider Count\", key: \"pProviderCount\" },\n  { label: \"Patient Risk Level\", key: \"PatientRiskLevel\" },\n  { label: \"Provider Risk Level\", key: \"ProviderRiskLevel\" },\n];\n\nclass JourneyTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      currSelected: null,\n      filters: {\n        resultStatus: null,\n      },\n    };\n  }\n\n  // LIFECYCLES\n  componentWillMount() {}\n  componentDidMount() {}\n  componentWillUnmount() {}\n  componentDidUpdate(prevProps) {\n    // if selectedItem change\n    if (prevProps.selectedItem !== this.props.selectedItem) {\n      this.setState({ currSelected: this.props.selectedItem });\n    }\n    // if data change\n    if (prevProps.data !== this.props.data && this.props.data.length > 0) {\n      this.props.data.sort(\n        (a, b) =>\n          new Date(a.FirstSeen).getTime() - new Date(b.FirstSeen).getTime()\n      );\n      this.setState({ data: this.props.data });\n    }\n  }\n\n  // TEMPLATES\n  statusBodyTemplate(rowData) {\n    return (\n      <>\n        {rowData.ResultStatus ? (\n          <span\n            className={`status-${\n              rowData.ResultStatus\n                ? rowData.ResultStatus.toLowerCase()\n                : rowData.ResultStatus\n            }  status-label`}\n            style={{}}\n          >\n            {rowData.ResultStatus}\n          </span>\n        ) : (\n          <p>Not Available</p>\n        )}\n      </>\n    );\n  }\n  datesBodyTemplate(rowData, key) {\n    return (\n      <>\n        {rowData[key] ? (\n          <Moment format=\"YYYY/MM/DD - HH:mm\">{rowData[key]}</Moment>\n        ) : (\n          <p>No test result</p>\n        )}\n      </>\n    );\n  }\n  riskLevelBodyTemplate(rowData, key) {\n    return (\n      <>\n        {rowData[key] ? (\n          <span className={`level-${rowData[key]} status-label`}>\n            {rowData[key]}\n          </span>\n        ) : null}\n      </>\n    );\n  }\n\n  // FILTERS\n  renderResultStatusFilter() {\n    const options = [\n      { label: \"Pending\", value: \"pending\" },\n      { label: \"Positive\", value: \"positive\" },\n      { label: \"Negative\", value: \"negative\" },\n    ];\n    const onChange = (event) => {\n      this.dt.filter(event.value, \"ResultStatus\", \"equals\");\n      this.setState({\n        filters: { ...this.state.filters, resultStatus: event.value },\n      });\n    };\n    const onClear = (event) => {\n      this.dt.filter(null, \"ResultStatus\", \"equals\");\n      this.setState({ filters: { ...this.state.filters, resultStatus: null } });\n    };\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Dropdown\n          value={this.state.filters.resultStatus}\n          options={options}\n          onChange={onChange}\n          placeholder=\"Results Status\"\n        />\n        {this.state.filters.resultStatus && (\n          <i onClick={onClear} className=\"pi pi-times\"></i>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"gyn-table-container\">\n        <div className=\"header\">\n          <h3>\n            Exposure Journey & Risk Analysis - Epidemiological Investigation\n          </h3>\n          {/* CSV EXPORT */}\n        <div className=\"export\">\n          <CSVLink data={this.state.data} headers={headers}>\n            Export to CSV\n          </CSVLink>\n        </div>\n        </div>\n        <div className=\"content\">\n\n        {/* TABLE */}\n        <DataTable\n          ref={(el) => (this.dt = el)}\n          value={this.state.data}\n          selectionMode=\"single\"\n          paginator\n          rows={5}\n          emptyMessage=\"No Results found\"\n          currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} items\"\n          paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\n          rowsPerPageOptions={[5, 10, 25, 50]}\n        >\n          <Column\n            field=\"PatientMRN\"\n            header=\"Patient's MRN\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"ProviderMRN\"\n            header=\"Provider's MRN\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"ProviderFirstName\"\n            header=\"Provider's First Name\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"ProviderLastName\"\n            header=\"Provider's Surname\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"FirstSeen\"\n            header=\"First Seen\"\n            sortable\n            style={baseColStyle}\n            body={(data) => this.datesBodyTemplate(data, \"FirstSeen\")}\n          />\n          <Column\n            field=\"ResultDate\"\n            header=\"Result Date\"\n            sortable\n            style={{ ...baseColStyle, overflow: \"inherit\" }}\n            body={(data) => this.datesBodyTemplate(data, \"ResultDate\")}\n          />\n          <Column\n            field=\"ResultStatus\"\n            header=\"Result Status\"\n            sortable\n            body={this.statusBodyTemplate}\n            style={{ ...baseColStyle, overflow: \"inherit\" }}\n          />\n          <Column\n            field=\"pPatientCount\"\n            header=\"Cumulative Indirect Exposure\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"PatientRiskLevel\"\n            header=\"Patient Risk Level\"\n            body={(row) => this.riskLevelBodyTemplate(row, \"PatientRiskLevel\")}\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"pProviderCount\"\n            header=\"Cumulative Exposures to Positive Patients\"\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"ProviderRiskLevel\"\n            header=\"Provider Risk Level\"\n            body={(row) => this.riskLevelBodyTemplate(row, \"ProviderRiskLevel\")}\n            sortable\n            style={baseColStyle}\n          />\n          <Column\n            field=\"Department\"\n            header=\"Department\"\n            sortable\n            style={baseColStyle}\n          />\n        </DataTable>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default JourneyTable;\n"]},"metadata":{},"sourceType":"module"}